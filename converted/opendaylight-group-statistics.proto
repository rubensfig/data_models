syntax = "proto3";
// Automatically generated by goyang https://github.com/openconfig/goyang
// compiled 2017-11-19T22:48:14Z
// do not delete the next line
// goyang-version 1
// module "opendaylight-group-statistics"
// revision "2013-11-11"
// namespace "urn:opendaylight:group:statistics"

package opendaylight_group_statistics;
service OpendaylightGroupStatistics {
  rpc GetAllGroupStatistics (GetAllGroupStatisticsRequest) returns (GetAllGroupStatisticsResponse);
  rpc GetGroupDescription (GetGroupDescriptionRequest) returns (GetGroupDescriptionResponse);
  rpc GetGroupFeatures (GetGroupFeaturesRequest) returns (GetGroupFeaturesResponse);
  rpc GetGroupStatistics (GetGroupStatisticsRequest) returns (GetGroupStatisticsResponse);
}
message GetAllGroupStatisticsRequest {
  string node = 1;
}
message GetAllGroupStatisticsResponse {
  repeated GroupStats group_stats = 1;
  uint64 transaction_id = 2;
}
message GetGroupDescriptionRequest {
  string node = 1;
}
message GetGroupDescriptionResponse {
  repeated GroupDescStats group_desc_stats = 1;
  uint64 transaction_id = 2;
}
message GetGroupFeaturesRequest {
  string node = 1;
}
message GetGroupFeaturesResponse {
  // Bitmap number OFPAT_* that are supported
  repeated uint32 actions = 1;
  repeated string group_capabilities_supported = 2;
  repeated string group_types_supported = 3;
  // Maximum number of groups for each type
  repeated uint32 max_groups = 4;
  uint64 transaction_id = 5;
}
message GetGroupStatisticsRequest {
  uint32 group_id = 1;
  string node = 2;
}
message GetGroupStatisticsResponse {
  repeated GroupStats group_stats = 1;
  uint64 transaction_id = 2;
}

message GroupDescStatsUpdated {
  message GroupDescStats {
    bool barrier = 1;
    message Buckets {
      message Bucket {
        message Action {
          message Action {
            message ControllerActionCase {
              message ControllerAction {
                uint32 max_length = 1;
              }
              ControllerAction controller_action = 1;
            }
            ControllerActionCase controller_action_case = 1;
            message CopyTtlInCase {
              message CopyTtlIn {
              }
              CopyTtlIn copy_ttl_in = 1;
            }
            CopyTtlInCase copy_ttl_in_case = 2;
            message CopyTtlOutCase {
              message CopyTtlOut {
              }
              CopyTtlOut copy_ttl_out = 1;
            }
            CopyTtlOutCase copy_ttl_out_case = 3;
            message DecMplsTtlCase {
              message DecMplsTtl {
              }
              DecMplsTtl dec_mpls_ttl = 1;
            }
            DecMplsTtlCase dec_mpls_ttl_case = 4;
            message DecNwTtlCase {
              message DecNwTtl {
              }
              DecNwTtl dec_nw_ttl = 1;
            }
            DecNwTtlCase dec_nw_ttl_case = 5;
            message DropActionCase {
              message DropAction {
              }
              DropAction drop_action = 1;
            }
            DropActionCase drop_action_case = 6;
            message FloodActionCase {
              message FloodAction {
              }
              FloodAction flood_action = 1;
            }
            FloodActionCase flood_action_case = 7;
            message FloodAllActionCase {
              message FloodAllAction {
              }
              FloodAllAction flood_all_action = 1;
            }
            FloodAllActionCase flood_all_action_case = 8;
            message GroupActionCase {
              message GroupAction {
                string group = 1;
                uint32 group_id = 2;
              }
              GroupAction group_action = 1;
            }
            GroupActionCase group_action_case = 9;
            message HwPathActionCase {
              message HwPathAction {
              }
              HwPathAction hw_path_action = 1;
            }
            HwPathActionCase hw_path_action_case = 10;
            message LoopbackActionCase {
              message LoopbackAction {
              }
              LoopbackAction loopback_action = 1;
            }
            LoopbackActionCase loopback_action_case = 11;
            message OutputActionCase {
              message OutputAction {
                uint32 max_length = 1;
                string output_node_connector = 2;
              }
              OutputAction output_action = 1;
            }
            OutputActionCase output_action_case = 12;
            message PopMplsActionCase {
              message PopMplsAction {
                uint32 ethernet_type = 1;
              }
              PopMplsAction pop_mpls_action = 1;
            }
            PopMplsActionCase pop_mpls_action_case = 13;
            message PopPbbActionCase {
              message PopPbbAction {
              }
              PopPbbAction pop_pbb_action = 1;
            }
            PopPbbActionCase pop_pbb_action_case = 14;
            message PopVlanActionCase {
              message PopVlanAction {
              }
              PopVlanAction pop_vlan_action = 1;
            }
            PopVlanActionCase pop_vlan_action_case = 15;
            message PushMplsActionCase {
              message PushMplsAction {
                uint32 ethernet_type = 1;
              }
              PushMplsAction push_mpls_action = 1;
            }
            PushMplsActionCase push_mpls_action_case = 16;
            message PushPbbActionCase {
              message PushPbbAction {
                uint32 ethernet_type = 1;
              }
              PushPbbAction push_pbb_action = 1;
            }
            PushPbbActionCase push_pbb_action_case = 17;
            message PushVlanActionCase {
              message PushVlanAction {
                int32 cfi = 1;
                uint32 ethernet_type = 2;
                int32 pcp = 3;
                int32 tag = 4;
                uint32 vlan_id = 5;
              }
              PushVlanAction push_vlan_action = 1;
            }
            PushVlanActionCase push_vlan_action_case = 18;
            message SetDlDstActionCase {
              message SetDlDstAction {
                string address = 1;
              }
              SetDlDstAction set_dl_dst_action = 1;
            }
            SetDlDstActionCase set_dl_dst_action_case = 19;
            message SetDlSrcActionCase {
              message SetDlSrcAction {
                string address = 1;
              }
              SetDlSrcAction set_dl_src_action = 1;
            }
            SetDlSrcActionCase set_dl_src_action_case = 20;
            message SetDlTypeActionCase {
              message SetDlTypeAction {
                uint32 dl_type = 1;
              }
              SetDlTypeAction set_dl_type_action = 1;
            }
            SetDlTypeActionCase set_dl_type_action_case = 21;
            message SetFieldCase {
              message SetField {
                message EthernetMatch {
                  // Ethernet destination address.
                  // Ethernet destination address.
                  message EthernetDestination {
                    string address = 1;
                    string mask = 2;
                  }
                  EthernetDestination ethernet_destination = 1;
                  // Ethernet source address.
                  // Ethernet source address.
                  message EthernetSource {
                    string address = 1;
                    string mask = 2;
                  }
                  EthernetSource ethernet_source = 2;
                  // Ethernet frame type.
                  // Ethernet frame type.
                  message EthernetType {
                    uint32 type = 1;
                  }
                  EthernetType ethernet_type = 3;
                }
                EthernetMatch ethernet_match = 1;
                message Icmpv4Match {
                  uint32 icmpv4_code = 1;
                  // ICMP type.
                  uint32 icmpv4_type = 2;
                }
                Icmpv4Match icmpv4_match = 2;
                message Icmpv6Match {
                  uint32 icmpv6_code = 1;
                  // ICMP type.
                  uint32 icmpv6_type = 2;
                }
                Icmpv6Match icmpv6_match = 3;
                string in_phy_port = 4;
                string in_port = 5;
                message IpMatch {
                  // IP DSCP (6 bits in ToS field).
                  uint32 ip_dscp = 1;
                  // IP ECN (2 bits in ToS field).
                  uint32 ip_ecn = 2;
                  // IP Proto (IPv4 or IPv6 Protocol Number).
                  enum IpProto {
                    IpProto_IPV4 = 0;
                    IpProto_IPV6 = 1;
                    IpProto_UNKNOWN = 2;
                  };
                  IpProto ip_proto = 3;
                  // IP protocol.
                  uint32 ip_protocol = 4;
                }
                IpMatch ip_match = 6;
                message Layer_3Match {
                  message ArpMatch {
                    uint32 arp_op = 1;
                    // ARP source hardware address.
                    // ARP source hardware address.
                    message ArpSourceHardwareAddress {
                      string address = 1;
                      string mask = 2;
                    }
                    ArpSourceHardwareAddress arp_source_hardware_address = 2;
                    // ARP source IPv4 address.
                    string arp_source_transport_address = 3;
                    // ARP target hardware address.
                    // ARP target hardware address.
                    message ArpTargetHardwareAddress {
                      string address = 1;
                      string mask = 2;
                    }
                    ArpTargetHardwareAddress arp_target_hardware_address = 4;
                    // ARP target IPv4 address.
                    string arp_target_transport_address = 5;
                  }
                  ArpMatch arp_match = 1;
                  message Ipv4Match {
                    // IPv4 destination address.
                    string ipv4_destination = 1;
                    // IPv4 source address.
                    string ipv4_source = 2;
                  }
                  Ipv4Match ipv4_match = 2;
                  message Ipv6Match {
                    // IPv6 destination address.
                    string ipv6_destination = 1;
                    message Ipv6ExtHeader {
                      // IPv6 Extension Header field
                      uint32 ipv6_exthdr = 1;
                      uint32 ipv6_exthdr_mask = 2;
                    }
                    Ipv6ExtHeader ipv6_ext_header = 2;
                    message Ipv6Label {
                      uint32 flabel_mask = 1;
                      uint32 ipv6_flabel = 2;
                    }
                    Ipv6Label ipv6_label = 3;
                    // Link layer source address for neighbour discovery message
                    string ipv6_nd_sll = 4;
                    // IPv6 target address for neighbour discovery message
                    string ipv6_nd_target = 5;
                    // Link layer target address for neighbour discovery message
                    string ipv6_nd_tll = 6;
                    // IPv6 source address.
                    string ipv6_source = 7;
                  }
                  Ipv6Match ipv6_match = 3;
                }
                Layer_3Match layer_3_match = 7;
                message Layer_4Match {
                  message SctpMatch {
                    // SCTP destination port.
                    uint32 sctp_destination_port = 1;
                    // SCTP source port.
                    uint32 sctp_source_port = 2;
                  }
                  SctpMatch sctp_match = 1;
                  message TcpMatch {
                    // TCP destination port.
                    uint32 tcp_destination_port = 1;
                    // TCP source port.
                    uint32 tcp_source_port = 2;
                  }
                  TcpMatch tcp_match = 2;
                  message UdpMatch {
                    // UDP destination port.
                    uint32 udp_destination_port = 1;
                    // UDP source port.
                    uint32 udp_source_port = 2;
                  }
                  UdpMatch udp_match = 3;
                }
                Layer_4Match layer_4_match = 8;
                message Metadata {
                  uint64 metadata = 1;
                  uint64 metadata_mask = 2;
                }
                Metadata metadata = 9;
                message ProtocolMatchFields {
                  // BoS bit in the first MPLS shim header
                  uint32 mpls_bos = 1;
                  // Label in the first MPLS shim header
                  uint32 mpls_label = 2;
                  // TC in the first MPLS shim header
                  uint32 mpls_tc = 3;
                  message Pbb {
                    // I-SID in the first PBB service instance tag
                    uint32 pbb_isid = 1;
                    uint32 pbb_mask = 2;
                  }
                  Pbb pbb = 4;
                }
                ProtocolMatchFields protocol_match_fields = 10;
                message Tunnel {
                  // Metadata associated in the logical port
                  uint64 tunnel_id = 1;
                  uint64 tunnel_mask = 2;
                }
                Tunnel tunnel = 11;
                message VlanMatch {
                  // VLAN id.
                  // VLAN id.
                  message VlanId {
                    uint32 vlan_id = 1;
                    bool vlan_id_present = 2;
                  }
                  VlanId vlan_id = 1;
                  // VLAN priority.
                  uint32 vlan_pcp = 2;
                }
                VlanMatch vlan_match = 12;
              }
              SetField set_field = 1;
            }
            SetFieldCase set_field_case = 22;
            message SetMplsTtlActionCase {
              message SetMplsTtlAction {
                uint32 mpls_ttl = 1;
              }
              SetMplsTtlAction set_mpls_ttl_action = 1;
            }
            SetMplsTtlActionCase set_mpls_ttl_action_case = 23;
            message SetNextHopActionCase {
              message SetNextHopAction {
                message Address {
                  message Ipv4 {
                    string ipv4_address = 1;
                  }
                  Ipv4 ipv4 = 1;
                  message Ipv6 {
                    string ipv6_address = 1;
                  }
                  Ipv6 ipv6 = 2;
                }
                Address address = 1;
              }
              SetNextHopAction set_next_hop_action = 1;
            }
            SetNextHopActionCase set_next_hop_action_case = 24;
            message SetNwDstActionCase {
              message SetNwDstAction {
                message Address {
                  message Ipv4 {
                    string ipv4_address = 1;
                  }
                  Ipv4 ipv4 = 1;
                  message Ipv6 {
                    string ipv6_address = 1;
                  }
                  Ipv6 ipv6 = 2;
                }
                Address address = 1;
              }
              SetNwDstAction set_nw_dst_action = 1;
            }
            SetNwDstActionCase set_nw_dst_action_case = 25;
            message SetNwSrcActionCase {
              message SetNwSrcAction {
                message Address {
                  message Ipv4 {
                    string ipv4_address = 1;
                  }
                  Ipv4 ipv4 = 1;
                  message Ipv6 {
                    string ipv6_address = 1;
                  }
                  Ipv6 ipv6 = 2;
                }
                Address address = 1;
              }
              SetNwSrcAction set_nw_src_action = 1;
            }
            SetNwSrcActionCase set_nw_src_action_case = 26;
            message SetNwTosActionCase {
              message SetNwTosAction {
                int32 tos = 1;
              }
              SetNwTosAction set_nw_tos_action = 1;
            }
            SetNwTosActionCase set_nw_tos_action_case = 27;
            message SetNwTtlActionCase {
              message SetNwTtlAction {
                uint32 nw_ttl = 1;
              }
              SetNwTtlAction set_nw_ttl_action = 1;
            }
            SetNwTtlActionCase set_nw_ttl_action_case = 28;
            message SetQueueActionCase {
              message SetQueueAction {
                string queue = 1;
                uint32 queue_id = 2;
              }
              SetQueueAction set_queue_action = 1;
            }
            SetQueueActionCase set_queue_action_case = 29;
            message SetTpDstActionCase {
              message SetTpDstAction {
                uint32 port = 1;
              }
              SetTpDstAction set_tp_dst_action = 1;
            }
            SetTpDstActionCase set_tp_dst_action_case = 30;
            message SetTpSrcActionCase {
              message SetTpSrcAction {
                uint32 port = 1;
              }
              SetTpSrcAction set_tp_src_action = 1;
            }
            SetTpSrcActionCase set_tp_src_action_case = 31;
            message SetVlanCfiActionCase {
              message SetVlanCfiAction {
                int32 vlan_cfi = 1;
              }
              SetVlanCfiAction set_vlan_cfi_action = 1;
            }
            SetVlanCfiActionCase set_vlan_cfi_action_case = 32;
            message SetVlanIdActionCase {
              message SetVlanIdAction {
                uint32 vlan_id = 1;
              }
              SetVlanIdAction set_vlan_id_action = 1;
            }
            SetVlanIdActionCase set_vlan_id_action_case = 33;
            message SetVlanPcpActionCase {
              message SetVlanPcpAction {
                uint32 vlan_pcp = 1;
              }
              SetVlanPcpAction set_vlan_pcp_action = 1;
            }
            SetVlanPcpActionCase set_vlan_pcp_action_case = 34;
            message StripVlanActionCase {
              message StripVlanAction {
              }
              StripVlanAction strip_vlan_action = 1;
            }
            StripVlanActionCase strip_vlan_action_case = 35;
            message SwPathActionCase {
              message SwPathAction {
              }
              SwPathAction sw_path_action = 1;
            }
            SwPathActionCase sw_path_action_case = 36;
          }
          Action action = 1;
          int32 order = 2;
        }
        repeated Action action = 1;
        uint32 bucket_id = 2;
        uint32 watch_group = 3;
        uint32 watch_port = 4;
        uint32 weight = 5;
      }
      repeated Bucket bucket = 1;
    }
    Buckets buckets = 2;
    string container_name = 3;
    uint32 group_id = 4;
    string group_name = 5;
    enum GroupType {
      GroupType_GROUP_ALL = 0;
      GroupType_GROUP_FF = 1;
      GroupType_GROUP_INDIRECT = 2;
      GroupType_GROUP_SELECT = 3;
    };
    GroupType group_type = 6;
  }
  repeated GroupDescStats group_desc_stats = 1;
  string id = 2;
  bool moreReplies = 3;
  message NodeConnector {
    string id = 1;
  }
  repeated NodeConnector node_connector = 4;
  uint64 transaction_id = 5;
}

message GroupFeaturesUpdated {
  // Bitmap number OFPAT_* that are supported
  repeated uint32 actions = 1;
  repeated string group_capabilities_supported = 2;
  repeated string group_types_supported = 3;
  string id = 4;
  // Maximum number of groups for each type
  repeated uint32 max_groups = 5;
  bool moreReplies = 6;
  message NodeConnector {
    string id = 1;
  }
  repeated NodeConnector node_connector = 7;
  uint64 transaction_id = 8;
}

message GroupStatisticsUpdated {
  message GroupStats {
    message Buckets {
      message BucketCounter {
        uint32 bucket_id = 1;
        uint64 byte_count = 2;
        uint64 packet_count = 3;
      }
      repeated BucketCounter bucket_counter = 1;
    }
    Buckets buckets = 1;
    uint64 byte_count = 2;
    message Duration {
      uint32 nanosecond = 1;
      uint32 second = 2;
    }
    Duration duration = 3;
    uint32 group_id = 4;
    uint64 packet_count = 5;
    uint32 ref_count = 6;
  }
  repeated GroupStats group_stats = 1;
  string id = 2;
  bool moreReplies = 3;
  message NodeConnector {
    string id = 1;
  }
  repeated NodeConnector node_connector = 4;
  uint64 transaction_id = 5;
}

// Do not delete the lines below, they preserve tag information for goyang.
// goyang-tag GetAllGroupStatistics_GetAllGroupStatisticsRequest node/string 1
// goyang-tag GetAllGroupStatistics_GetAllGroupStatisticsResponse group_stats/GroupStats[] 1
// goyang-tag GetAllGroupStatistics_GetAllGroupStatisticsResponse transaction_id/uint64 2
// goyang-tag GetGroupDescription_GetGroupDescriptionRequest node/string 1
// goyang-tag GetGroupDescription_GetGroupDescriptionResponse group_desc_stats/GroupDescStats[] 1
// goyang-tag GetGroupDescription_GetGroupDescriptionResponse transaction_id/uint64 2
// goyang-tag GetGroupFeatures_GetGroupFeaturesRequest node/string 1
// goyang-tag GetGroupFeatures_GetGroupFeaturesResponse actions/uint32[] 1
// goyang-tag GetGroupFeatures_GetGroupFeaturesResponse group_capabilities_supported/string[] 2
// goyang-tag GetGroupFeatures_GetGroupFeaturesResponse group_types_supported/string[] 3
// goyang-tag GetGroupFeatures_GetGroupFeaturesResponse max_groups/uint32[] 4
// goyang-tag GetGroupFeatures_GetGroupFeaturesResponse transaction_id/uint64 5
// goyang-tag GetGroupStatistics_GetGroupStatisticsRequest group_id/uint32 1
// goyang-tag GetGroupStatistics_GetGroupStatisticsRequest node/string 2
// goyang-tag GetGroupStatistics_GetGroupStatisticsResponse group_stats/GroupStats[] 1
// goyang-tag GetGroupStatistics_GetGroupStatisticsResponse transaction_id/uint64 2
// goyang-tag GroupDescStatsUpdated group_desc_stats/GroupDescStats[] 1
// goyang-tag GroupDescStatsUpdated id/string 2
// goyang-tag GroupDescStatsUpdated moreReplies/bool 3
// goyang-tag GroupDescStatsUpdated node_connector/NodeConnector[] 4
// goyang-tag GroupDescStatsUpdated transaction_id/uint64 5
// goyang-tag GroupDescStatsUpdated_GroupDescStats barrier/bool 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats buckets/Buckets 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats container_name/string 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats group_id/uint32 4
// goyang-tag GroupDescStatsUpdated_GroupDescStats group_name/string 5
// goyang-tag GroupDescStatsUpdated_GroupDescStats group_type/GroupType 6
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action action/Action 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action order/int32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action controller_action_case/ControllerActionCase 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action copy_ttl_in_case/CopyTtlInCase 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action copy_ttl_out_case/CopyTtlOutCase 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action dec_mpls_ttl_case/DecMplsTtlCase 4
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action dec_nw_ttl_case/DecNwTtlCase 5
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action drop_action_case/DropActionCase 6
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action flood_action_case/FloodActionCase 7
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action flood_all_action_case/FloodAllActionCase 8
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action group_action_case/GroupActionCase 9
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action hw_path_action_case/HwPathActionCase 10
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action loopback_action_case/LoopbackActionCase 11
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action output_action_case/OutputActionCase 12
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action pop_mpls_action_case/PopMplsActionCase 13
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action pop_pbb_action_case/PopPbbActionCase 14
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action pop_vlan_action_case/PopVlanActionCase 15
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action push_mpls_action_case/PushMplsActionCase 16
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action push_pbb_action_case/PushPbbActionCase 17
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action push_vlan_action_case/PushVlanActionCase 18
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_dl_dst_action_case/SetDlDstActionCase 19
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_dl_src_action_case/SetDlSrcActionCase 20
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_dl_type_action_case/SetDlTypeActionCase 21
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_field_case/SetFieldCase 22
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_mpls_ttl_action_case/SetMplsTtlActionCase 23
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_next_hop_action_case/SetNextHopActionCase 24
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_nw_dst_action_case/SetNwDstActionCase 25
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_nw_src_action_case/SetNwSrcActionCase 26
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_nw_tos_action_case/SetNwTosActionCase 27
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_nw_ttl_action_case/SetNwTtlActionCase 28
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_queue_action_case/SetQueueActionCase 29
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_tp_dst_action_case/SetTpDstActionCase 30
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_tp_src_action_case/SetTpSrcActionCase 31
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_vlan_cfi_action_case/SetVlanCfiActionCase 32
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_vlan_id_action_case/SetVlanIdActionCase 33
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action set_vlan_pcp_action_case/SetVlanPcpActionCase 34
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action strip_vlan_action_case/StripVlanActionCase 35
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action sw_path_action_case/SwPathActionCase 36
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_ControllerActionCase controller_action/ControllerAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_ControllerActionCase_ControllerAction max_length/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_CopyTtlInCase copy_ttl_in/CopyTtlIn 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_CopyTtlOutCase copy_ttl_out/CopyTtlOut 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_DecMplsTtlCase dec_mpls_ttl/DecMplsTtl 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_DecNwTtlCase dec_nw_ttl/DecNwTtl 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_DropActionCase drop_action/DropAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_FloodActionCase flood_action/FloodAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_FloodAllActionCase flood_all_action/FloodAllAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_GroupActionCase group_action/GroupAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_GroupActionCase_GroupAction group/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_GroupActionCase_GroupAction group_id/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_HwPathActionCase hw_path_action/HwPathAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_LoopbackActionCase loopback_action/LoopbackAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_OutputActionCase output_action/OutputAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_OutputActionCase_OutputAction max_length/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_OutputActionCase_OutputAction output_node_connector/string 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PopMplsActionCase pop_mpls_action/PopMplsAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PopMplsActionCase_PopMplsAction ethernet_type/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PopPbbActionCase pop_pbb_action/PopPbbAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PopVlanActionCase pop_vlan_action/PopVlanAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PushMplsActionCase push_mpls_action/PushMplsAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PushMplsActionCase_PushMplsAction ethernet_type/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PushPbbActionCase push_pbb_action/PushPbbAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PushPbbActionCase_PushPbbAction ethernet_type/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PushVlanActionCase push_vlan_action/PushVlanAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PushVlanActionCase_PushVlanAction cfi/int32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PushVlanActionCase_PushVlanAction ethernet_type/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PushVlanActionCase_PushVlanAction pcp/int32 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PushVlanActionCase_PushVlanAction tag/int32 4
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_PushVlanActionCase_PushVlanAction vlan_id/uint32 5
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetDlDstActionCase set_dl_dst_action/SetDlDstAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetDlDstActionCase_SetDlDstAction address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetDlSrcActionCase set_dl_src_action/SetDlSrcAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetDlSrcActionCase_SetDlSrcAction address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetDlTypeActionCase set_dl_type_action/SetDlTypeAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetDlTypeActionCase_SetDlTypeAction dl_type/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase set_field/SetField 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField ethernet_match/EthernetMatch 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField icmpv4_match/Icmpv4Match 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField icmpv6_match/Icmpv6Match 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField in_phy_port/string 4
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField in_port/string 5
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField ip_match/IpMatch 6
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField layer_3_match/Layer_3Match 7
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField layer_4_match/Layer_4Match 8
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField metadata/Metadata 9
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField protocol_match_fields/ProtocolMatchFields 10
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField tunnel/Tunnel 11
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField vlan_match/VlanMatch 12
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_destination/EthernetDestination 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_source/EthernetSource 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_type/EthernetType 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetDestination address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetDestination mask/string 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetSource address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetSource mask/string 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetType type/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Icmpv4Match icmpv4_code/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Icmpv4Match icmpv4_type/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Icmpv6Match icmpv6_code/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Icmpv6Match icmpv6_type/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_IpMatch ip_dscp/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_IpMatch ip_ecn/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_IpMatch ip_proto/IpProto 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_IpMatch ip_protocol/uint32 4
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match arp_match/ArpMatch 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match ipv4_match/Ipv4Match 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match ipv6_match/Ipv6Match 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_op/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_source_hardware_address/ArpSourceHardwareAddress 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_source_transport_address/string 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_target_hardware_address/ArpTargetHardwareAddress 4
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_target_transport_address/string 5
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpSourceHardwareAddress address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpSourceHardwareAddress mask/string 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpTargetHardwareAddress address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpTargetHardwareAddress mask/string 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv4Match ipv4_destination/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv4Match ipv4_source/string 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_destination/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_ext_header/Ipv6ExtHeader 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_label/Ipv6Label 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_sll/string 4
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_target/string 5
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_tll/string 6
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_source/string 7
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6ExtHeader ipv6_exthdr/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6ExtHeader ipv6_exthdr_mask/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6Label flabel_mask/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6Label ipv6_flabel/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_4Match sctp_match/SctpMatch 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_4Match tcp_match/TcpMatch 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_4Match udp_match/UdpMatch 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_4Match_SctpMatch sctp_destination_port/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_4Match_SctpMatch sctp_source_port/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_4Match_TcpMatch tcp_destination_port/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_4Match_TcpMatch tcp_source_port/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_4Match_UdpMatch udp_destination_port/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Layer_4Match_UdpMatch udp_source_port/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Metadata metadata/uint64 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Metadata metadata_mask/uint64 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_bos/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_label/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_tc/uint32 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_ProtocolMatchFields pbb/Pbb 4
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_ProtocolMatchFields_Pbb pbb_isid/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_ProtocolMatchFields_Pbb pbb_mask/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Tunnel tunnel_id/uint64 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_Tunnel tunnel_mask/uint64 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_VlanMatch vlan_id/VlanId 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_VlanMatch vlan_pcp/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_VlanMatch_VlanId vlan_id/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetFieldCase_SetField_VlanMatch_VlanId vlan_id_present/bool 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetMplsTtlActionCase set_mpls_ttl_action/SetMplsTtlAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetMplsTtlActionCase_SetMplsTtlAction mpls_ttl/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNextHopActionCase set_next_hop_action/SetNextHopAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNextHopActionCase_SetNextHopAction address/Address 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNextHopActionCase_SetNextHopAction_Address ipv4/Ipv4 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNextHopActionCase_SetNextHopAction_Address ipv6/Ipv6 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNextHopActionCase_SetNextHopAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNextHopActionCase_SetNextHopAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwDstActionCase set_nw_dst_action/SetNwDstAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwDstActionCase_SetNwDstAction address/Address 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwDstActionCase_SetNwDstAction_Address ipv4/Ipv4 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwDstActionCase_SetNwDstAction_Address ipv6/Ipv6 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwDstActionCase_SetNwDstAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwDstActionCase_SetNwDstAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwSrcActionCase set_nw_src_action/SetNwSrcAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwSrcActionCase_SetNwSrcAction address/Address 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address ipv4/Ipv4 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address ipv6/Ipv6 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwTosActionCase set_nw_tos_action/SetNwTosAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwTosActionCase_SetNwTosAction tos/int32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwTtlActionCase set_nw_ttl_action/SetNwTtlAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetNwTtlActionCase_SetNwTtlAction nw_ttl/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetQueueActionCase set_queue_action/SetQueueAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetQueueActionCase_SetQueueAction queue/string 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetQueueActionCase_SetQueueAction queue_id/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetTpDstActionCase set_tp_dst_action/SetTpDstAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetTpDstActionCase_SetTpDstAction port/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetTpSrcActionCase set_tp_src_action/SetTpSrcAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetTpSrcActionCase_SetTpSrcAction port/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetVlanCfiActionCase set_vlan_cfi_action/SetVlanCfiAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetVlanCfiActionCase_SetVlanCfiAction vlan_cfi/int32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetVlanIdActionCase set_vlan_id_action/SetVlanIdAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetVlanIdActionCase_SetVlanIdAction vlan_id/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetVlanPcpActionCase set_vlan_pcp_action/SetVlanPcpAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SetVlanPcpActionCase_SetVlanPcpAction vlan_pcp/uint32 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_StripVlanActionCase strip_vlan_action/StripVlanAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Bucket_Action_Action_SwPathActionCase sw_path_action/SwPathAction 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Buckets bucket/Bucket[] 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Buckets_Bucket action/Action[] 1
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Buckets_Bucket bucket_id/uint32 2
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Buckets_Bucket watch_group/uint32 3
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Buckets_Bucket watch_port/uint32 4
// goyang-tag GroupDescStatsUpdated_GroupDescStats_Buckets_Bucket weight/uint32 5
// goyang-tag GroupDescStatsUpdated_NodeConnector id/string 1
// goyang-tag GroupFeaturesUpdated actions/uint32[] 1
// goyang-tag GroupFeaturesUpdated group_capabilities_supported/string[] 2
// goyang-tag GroupFeaturesUpdated group_types_supported/string[] 3
// goyang-tag GroupFeaturesUpdated id/string 4
// goyang-tag GroupFeaturesUpdated max_groups/uint32[] 5
// goyang-tag GroupFeaturesUpdated moreReplies/bool 6
// goyang-tag GroupFeaturesUpdated node_connector/NodeConnector[] 7
// goyang-tag GroupFeaturesUpdated transaction_id/uint64 8
// goyang-tag GroupFeaturesUpdated_NodeConnector id/string 1
// goyang-tag GroupStatisticsUpdated group_stats/GroupStats[] 1
// goyang-tag GroupStatisticsUpdated id/string 2
// goyang-tag GroupStatisticsUpdated moreReplies/bool 3
// goyang-tag GroupStatisticsUpdated node_connector/NodeConnector[] 4
// goyang-tag GroupStatisticsUpdated transaction_id/uint64 5
// goyang-tag GroupStatisticsUpdated_GroupStats buckets/Buckets 1
// goyang-tag GroupStatisticsUpdated_GroupStats byte_count/uint64 2
// goyang-tag GroupStatisticsUpdated_GroupStats duration/Duration 3
// goyang-tag GroupStatisticsUpdated_GroupStats group_id/uint32 4
// goyang-tag GroupStatisticsUpdated_GroupStats packet_count/uint64 5
// goyang-tag GroupStatisticsUpdated_GroupStats ref_count/uint32 6
// goyang-tag GroupStatisticsUpdated_GroupStats_Buckets bucket_counter/BucketCounter[] 1
// goyang-tag GroupStatisticsUpdated_GroupStats_Buckets_BucketCounter bucket_id/uint32 1
// goyang-tag GroupStatisticsUpdated_GroupStats_Buckets_BucketCounter byte_count/uint64 2
// goyang-tag GroupStatisticsUpdated_GroupStats_Buckets_BucketCounter packet_count/uint64 3
// goyang-tag GroupStatisticsUpdated_GroupStats_Duration nanosecond/uint32 1
// goyang-tag GroupStatisticsUpdated_GroupStats_Duration second/uint32 2
// goyang-tag GroupStatisticsUpdated_NodeConnector id/string 1

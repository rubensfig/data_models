syntax = "proto3";
// Automatically generated by goyang https://github.com/openconfig/goyang
// compiled 2017-11-20T10:18:08Z
// do not delete the next line
// goyang-version 1
// module "opendaylight-flow-statistics"
// revision "2013-08-19"
// namespace "urn:opendaylight:flow:statistics"

package opendaylight_flow_statistics;
service OpendaylightFlowStatistics {
  rpc GetAggregateFlowStatisticsFromFlowTableForAllFlows (GetAggregateFlowStatisticsFromFlowTableForAllFlowsRequest) returns (GetAggregateFlowStatisticsFromFlowTableForAllFlowsResponse);
  rpc GetAggregateFlowStatisticsFromFlowTableForGivenMatch (GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest) returns (GetAggregateFlowStatisticsFromFlowTableForGivenMatchResponse);
  rpc GetAllFlowStatisticsFromFlowTable (GetAllFlowStatisticsFromFlowTableRequest) returns (GetAllFlowStatisticsFromFlowTableResponse);
  rpc GetAllFlowsStatisticsFromAllFlowTables (GetAllFlowsStatisticsFromAllFlowTablesRequest) returns (GetAllFlowsStatisticsFromAllFlowTablesResponse);
  rpc GetFlowStatisticsFromFlowTable (GetFlowStatisticsFromFlowTableRequest) returns (GetFlowStatisticsFromFlowTableResponse);
}
message GetAggregateFlowStatisticsFromFlowTableForAllFlowsRequest {
  string node = 1;
  uint32 table_id = 2;
}
message GetAggregateFlowStatisticsFromFlowTableForAllFlowsResponse {
  uint64 byte_count = 1;
  uint32 flow_count = 2;
  uint64 packet_count = 3;
  uint64 transaction_id = 4;
}
message GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest {
  bool barrier = 1;
  uint32 buffer_id = 2;
  string container_name = 3;
  uint64 cookie = 4;
  uint64 cookie_mask = 5;
  enum Flags {
    Flags_FIELD_NOT_SET = 0;
    Flags_CHECK_OVERLAP = 1;
    Flags_RESET_COUNTS = 2;
    Flags_NO_PKT_COUNTS = 4;
    Flags_NO_BYT_COUNTS = 8;
    Flags_SEND_FLOW_REM = 16;
  };
  Flags flags = 6;
  string flow_name = 7;
  uint32 hard_timeout = 8;
  uint32 idle_timeout = 9;
  bool installHw = 10;
  Instructions instructions = 11;
  Match match = 12;
  string node = 13;
  uint32 out_group = 14;
  uint64 out_port = 15;
  uint32 priority = 16;
  bool strict = 17;
  uint32 table_id = 18;
}
message GetAggregateFlowStatisticsFromFlowTableForGivenMatchResponse {
  uint64 byte_count = 1;
  uint32 flow_count = 2;
  uint64 packet_count = 3;
  uint64 transaction_id = 4;
}
message GetAllFlowStatisticsFromFlowTableRequest {
  string node = 1;
  uint32 table_id = 2;
}
message GetAllFlowStatisticsFromFlowTableResponse {
  repeated FlowAndStatisticsMapList flow_and_statistics_map_list = 1;
  uint64 transaction_id = 2;
}
message GetAllFlowsStatisticsFromAllFlowTablesRequest {
  string node = 1;
}
message GetAllFlowsStatisticsFromAllFlowTablesResponse {
  repeated FlowAndStatisticsMapList flow_and_statistics_map_list = 1;
  uint64 transaction_id = 2;
}
message GetFlowStatisticsFromFlowTableRequest {
  bool barrier = 1;
  uint32 buffer_id = 2;
  string container_name = 3;
  uint64 cookie = 4;
  uint64 cookie_mask = 5;
  enum Flags {
    Flags_FIELD_NOT_SET = 0;
    Flags_CHECK_OVERLAP = 1;
    Flags_RESET_COUNTS = 2;
    Flags_NO_PKT_COUNTS = 4;
    Flags_NO_BYT_COUNTS = 8;
    Flags_SEND_FLOW_REM = 16;
  };
  Flags flags = 6;
  string flow_name = 7;
  uint32 hard_timeout = 8;
  uint32 idle_timeout = 9;
  bool installHw = 10;
  Instructions instructions = 11;
  Match match = 12;
  string node = 13;
  uint32 out_group = 14;
  uint64 out_port = 15;
  uint32 priority = 16;
  bool strict = 17;
  uint32 table_id = 18;
}
message GetFlowStatisticsFromFlowTableResponse {
  repeated FlowAndStatisticsMapList flow_and_statistics_map_list = 1;
  uint64 transaction_id = 2;
}

// Aggregate flow statistics for a table, sent by switch
message AggregateFlowStatisticsUpdate {
  uint64 byte_count = 1;
  uint32 flow_count = 2;
  string id = 3;
  bool moreReplies = 4;
  message NodeConnector {
    string id = 1;
  }
  repeated NodeConnector node_connector = 5;
  uint64 packet_count = 6;
  uint64 transaction_id = 7;
}

// Flows statistics sent by switch
message FlowsStatisticsUpdate {
  message FlowAndStatisticsMapList {
    bool barrier = 1;
    uint32 buffer_id = 2;
    uint64 byte_count = 3;
    string container_name = 4;
    uint64 cookie = 5;
    uint64 cookie_mask = 6;
    message Duration {
      uint32 nanosecond = 1;
      uint32 second = 2;
    }
    Duration duration = 7;
    enum Flags {
      Flags_FIELD_NOT_SET = 0;
      Flags_CHECK_OVERLAP = 1;
      Flags_RESET_COUNTS = 2;
      Flags_NO_PKT_COUNTS = 4;
      Flags_NO_BYT_COUNTS = 8;
      Flags_SEND_FLOW_REM = 16;
    };
    Flags flags = 8;
    string flow_id = 9;
    string flow_name = 10;
    uint32 hard_timeout = 11;
    uint32 idle_timeout = 12;
    bool installHw = 13;
    message Instructions {
      message Instruction {
        message Instruction {
          message ApplyActionsCase {
            message ApplyActions {
              message Action {
                message Action {
                  message ControllerActionCase {
                    message ControllerAction {
                      uint32 max_length = 1;
                    }
                    ControllerAction controller_action = 1;
                  }
                  ControllerActionCase controller_action_case = 1;
                  message CopyTtlInCase {
                    message CopyTtlIn {
                    }
                    CopyTtlIn copy_ttl_in = 1;
                  }
                  CopyTtlInCase copy_ttl_in_case = 2;
                  message CopyTtlOutCase {
                    message CopyTtlOut {
                    }
                    CopyTtlOut copy_ttl_out = 1;
                  }
                  CopyTtlOutCase copy_ttl_out_case = 3;
                  message DecMplsTtlCase {
                    message DecMplsTtl {
                    }
                    DecMplsTtl dec_mpls_ttl = 1;
                  }
                  DecMplsTtlCase dec_mpls_ttl_case = 4;
                  message DecNwTtlCase {
                    message DecNwTtl {
                    }
                    DecNwTtl dec_nw_ttl = 1;
                  }
                  DecNwTtlCase dec_nw_ttl_case = 5;
                  message DropActionCase {
                    message DropAction {
                    }
                    DropAction drop_action = 1;
                  }
                  DropActionCase drop_action_case = 6;
                  message FloodActionCase {
                    message FloodAction {
                    }
                    FloodAction flood_action = 1;
                  }
                  FloodActionCase flood_action_case = 7;
                  message FloodAllActionCase {
                    message FloodAllAction {
                    }
                    FloodAllAction flood_all_action = 1;
                  }
                  FloodAllActionCase flood_all_action_case = 8;
                  message GroupActionCase {
                    message GroupAction {
                      string group = 1;
                      uint32 group_id = 2;
                    }
                    GroupAction group_action = 1;
                  }
                  GroupActionCase group_action_case = 9;
                  message HwPathActionCase {
                    message HwPathAction {
                    }
                    HwPathAction hw_path_action = 1;
                  }
                  HwPathActionCase hw_path_action_case = 10;
                  message LoopbackActionCase {
                    message LoopbackAction {
                    }
                    LoopbackAction loopback_action = 1;
                  }
                  LoopbackActionCase loopback_action_case = 11;
                  message OutputActionCase {
                    message OutputAction {
                      uint32 max_length = 1;
                      string output_node_connector = 2;
                    }
                    OutputAction output_action = 1;
                  }
                  OutputActionCase output_action_case = 12;
                  message PopMplsActionCase {
                    message PopMplsAction {
                      uint32 ethernet_type = 1;
                    }
                    PopMplsAction pop_mpls_action = 1;
                  }
                  PopMplsActionCase pop_mpls_action_case = 13;
                  message PopPbbActionCase {
                    message PopPbbAction {
                    }
                    PopPbbAction pop_pbb_action = 1;
                  }
                  PopPbbActionCase pop_pbb_action_case = 14;
                  message PopVlanActionCase {
                    message PopVlanAction {
                    }
                    PopVlanAction pop_vlan_action = 1;
                  }
                  PopVlanActionCase pop_vlan_action_case = 15;
                  message PushMplsActionCase {
                    message PushMplsAction {
                      uint32 ethernet_type = 1;
                    }
                    PushMplsAction push_mpls_action = 1;
                  }
                  PushMplsActionCase push_mpls_action_case = 16;
                  message PushPbbActionCase {
                    message PushPbbAction {
                      uint32 ethernet_type = 1;
                    }
                    PushPbbAction push_pbb_action = 1;
                  }
                  PushPbbActionCase push_pbb_action_case = 17;
                  message PushVlanActionCase {
                    message PushVlanAction {
                      int32 cfi = 1;
                      uint32 ethernet_type = 2;
                      int32 pcp = 3;
                      int32 tag = 4;
                      uint32 vlan_id = 5;
                    }
                    PushVlanAction push_vlan_action = 1;
                  }
                  PushVlanActionCase push_vlan_action_case = 18;
                  message SetDlDstActionCase {
                    message SetDlDstAction {
                      string address = 1;
                    }
                    SetDlDstAction set_dl_dst_action = 1;
                  }
                  SetDlDstActionCase set_dl_dst_action_case = 19;
                  message SetDlSrcActionCase {
                    message SetDlSrcAction {
                      string address = 1;
                    }
                    SetDlSrcAction set_dl_src_action = 1;
                  }
                  SetDlSrcActionCase set_dl_src_action_case = 20;
                  message SetDlTypeActionCase {
                    message SetDlTypeAction {
                      uint32 dl_type = 1;
                    }
                    SetDlTypeAction set_dl_type_action = 1;
                  }
                  SetDlTypeActionCase set_dl_type_action_case = 21;
                  message SetFieldCase {
                    message SetField {
                      message EthernetMatch {
                        // Ethernet destination address.
                        // Ethernet destination address.
                        message EthernetDestination {
                          string address = 1;
                          string mask = 2;
                        }
                        EthernetDestination ethernet_destination = 1;
                        // Ethernet source address.
                        // Ethernet source address.
                        message EthernetSource {
                          string address = 1;
                          string mask = 2;
                        }
                        EthernetSource ethernet_source = 2;
                        // Ethernet frame type.
                        // Ethernet frame type.
                        message EthernetType {
                          uint32 type = 1;
                        }
                        EthernetType ethernet_type = 3;
                      }
                      EthernetMatch ethernet_match = 1;
                      message Icmpv4Match {
                        uint32 icmpv4_code = 1;
                        // ICMP type.
                        uint32 icmpv4_type = 2;
                      }
                      Icmpv4Match icmpv4_match = 2;
                      message Icmpv6Match {
                        uint32 icmpv6_code = 1;
                        // ICMP type.
                        uint32 icmpv6_type = 2;
                      }
                      Icmpv6Match icmpv6_match = 3;
                      string in_phy_port = 4;
                      string in_port = 5;
                      message IpMatch {
                        // IP DSCP (6 bits in ToS field).
                        uint32 ip_dscp = 1;
                        // IP ECN (2 bits in ToS field).
                        uint32 ip_ecn = 2;
                        // IP Proto (IPv4 or IPv6 Protocol Number).
                        enum IpProto {
                          IpProto_IPV4 = 0;
                          IpProto_IPV6 = 1;
                          IpProto_UNKNOWN = 2;
                        };
                        IpProto ip_proto = 3;
                        // IP protocol.
                        uint32 ip_protocol = 4;
                      }
                      IpMatch ip_match = 6;
                      message Layer_3Match {
                        message ArpMatch {
                          uint32 arp_op = 1;
                          // ARP source hardware address.
                          // ARP source hardware address.
                          message ArpSourceHardwareAddress {
                            string address = 1;
                            string mask = 2;
                          }
                          ArpSourceHardwareAddress arp_source_hardware_address = 2;
                          // ARP source IPv4 address.
                          string arp_source_transport_address = 3;
                          // ARP target hardware address.
                          // ARP target hardware address.
                          message ArpTargetHardwareAddress {
                            string address = 1;
                            string mask = 2;
                          }
                          ArpTargetHardwareAddress arp_target_hardware_address = 4;
                          // ARP target IPv4 address.
                          string arp_target_transport_address = 5;
                        }
                        ArpMatch arp_match = 1;
                        message Ipv4Match {
                          // IPv4 destination address.
                          string ipv4_destination = 1;
                          // IPv4 source address.
                          string ipv4_source = 2;
                        }
                        Ipv4Match ipv4_match = 2;
                        message Ipv6Match {
                          // IPv6 destination address.
                          string ipv6_destination = 1;
                          message Ipv6ExtHeader {
                            // IPv6 Extension Header field
                            uint32 ipv6_exthdr = 1;
                            uint32 ipv6_exthdr_mask = 2;
                          }
                          Ipv6ExtHeader ipv6_ext_header = 2;
                          message Ipv6Label {
                            uint32 flabel_mask = 1;
                            uint32 ipv6_flabel = 2;
                          }
                          Ipv6Label ipv6_label = 3;
                          // Link layer source address for neighbour discovery message
                          string ipv6_nd_sll = 4;
                          // IPv6 target address for neighbour discovery message
                          string ipv6_nd_target = 5;
                          // Link layer target address for neighbour discovery message
                          string ipv6_nd_tll = 6;
                          // IPv6 source address.
                          string ipv6_source = 7;
                        }
                        Ipv6Match ipv6_match = 3;
                      }
                      Layer_3Match layer_3_match = 7;
                      message Layer_4Match {
                        message SctpMatch {
                          // SCTP destination port.
                          uint32 sctp_destination_port = 1;
                          // SCTP source port.
                          uint32 sctp_source_port = 2;
                        }
                        SctpMatch sctp_match = 1;
                        message TcpMatch {
                          // TCP destination port.
                          uint32 tcp_destination_port = 1;
                          // TCP source port.
                          uint32 tcp_source_port = 2;
                        }
                        TcpMatch tcp_match = 2;
                        message UdpMatch {
                          // UDP destination port.
                          uint32 udp_destination_port = 1;
                          // UDP source port.
                          uint32 udp_source_port = 2;
                        }
                        UdpMatch udp_match = 3;
                      }
                      Layer_4Match layer_4_match = 8;
                      message Metadata {
                        uint64 metadata = 1;
                        uint64 metadata_mask = 2;
                      }
                      Metadata metadata = 9;
                      message ProtocolMatchFields {
                        // BoS bit in the first MPLS shim header
                        uint32 mpls_bos = 1;
                        // Label in the first MPLS shim header
                        uint32 mpls_label = 2;
                        // TC in the first MPLS shim header
                        uint32 mpls_tc = 3;
                        message Pbb {
                          // I-SID in the first PBB service instance tag
                          uint32 pbb_isid = 1;
                          uint32 pbb_mask = 2;
                        }
                        Pbb pbb = 4;
                      }
                      ProtocolMatchFields protocol_match_fields = 10;
                      message Tunnel {
                        // Metadata associated in the logical port
                        uint64 tunnel_id = 1;
                        uint64 tunnel_mask = 2;
                      }
                      Tunnel tunnel = 11;
                      message VlanMatch {
                        // VLAN id.
                        // VLAN id.
                        message VlanId {
                          uint32 vlan_id = 1;
                          bool vlan_id_present = 2;
                        }
                        VlanId vlan_id = 1;
                        // VLAN priority.
                        uint32 vlan_pcp = 2;
                      }
                      VlanMatch vlan_match = 12;
                    }
                    SetField set_field = 1;
                  }
                  SetFieldCase set_field_case = 22;
                  message SetMplsTtlActionCase {
                    message SetMplsTtlAction {
                      uint32 mpls_ttl = 1;
                    }
                    SetMplsTtlAction set_mpls_ttl_action = 1;
                  }
                  SetMplsTtlActionCase set_mpls_ttl_action_case = 23;
                  message SetNextHopActionCase {
                    message SetNextHopAction {
                      message Address {
                        message Ipv4 {
                          string ipv4_address = 1;
                        }
                        Ipv4 ipv4 = 1;
                        message Ipv6 {
                          string ipv6_address = 1;
                        }
                        Ipv6 ipv6 = 2;
                      }
                      Address address = 1;
                    }
                    SetNextHopAction set_next_hop_action = 1;
                  }
                  SetNextHopActionCase set_next_hop_action_case = 24;
                  message SetNwDstActionCase {
                    message SetNwDstAction {
                      message Address {
                        message Ipv4 {
                          string ipv4_address = 1;
                        }
                        Ipv4 ipv4 = 1;
                        message Ipv6 {
                          string ipv6_address = 1;
                        }
                        Ipv6 ipv6 = 2;
                      }
                      Address address = 1;
                    }
                    SetNwDstAction set_nw_dst_action = 1;
                  }
                  SetNwDstActionCase set_nw_dst_action_case = 25;
                  message SetNwSrcActionCase {
                    message SetNwSrcAction {
                      message Address {
                        message Ipv4 {
                          string ipv4_address = 1;
                        }
                        Ipv4 ipv4 = 1;
                        message Ipv6 {
                          string ipv6_address = 1;
                        }
                        Ipv6 ipv6 = 2;
                      }
                      Address address = 1;
                    }
                    SetNwSrcAction set_nw_src_action = 1;
                  }
                  SetNwSrcActionCase set_nw_src_action_case = 26;
                  message SetNwTosActionCase {
                    message SetNwTosAction {
                      int32 tos = 1;
                    }
                    SetNwTosAction set_nw_tos_action = 1;
                  }
                  SetNwTosActionCase set_nw_tos_action_case = 27;
                  message SetNwTtlActionCase {
                    message SetNwTtlAction {
                      uint32 nw_ttl = 1;
                    }
                    SetNwTtlAction set_nw_ttl_action = 1;
                  }
                  SetNwTtlActionCase set_nw_ttl_action_case = 28;
                  message SetQueueActionCase {
                    message SetQueueAction {
                      string queue = 1;
                      uint32 queue_id = 2;
                    }
                    SetQueueAction set_queue_action = 1;
                  }
                  SetQueueActionCase set_queue_action_case = 29;
                  message SetTpDstActionCase {
                    message SetTpDstAction {
                      uint32 port = 1;
                    }
                    SetTpDstAction set_tp_dst_action = 1;
                  }
                  SetTpDstActionCase set_tp_dst_action_case = 30;
                  message SetTpSrcActionCase {
                    message SetTpSrcAction {
                      uint32 port = 1;
                    }
                    SetTpSrcAction set_tp_src_action = 1;
                  }
                  SetTpSrcActionCase set_tp_src_action_case = 31;
                  message SetVlanCfiActionCase {
                    message SetVlanCfiAction {
                      int32 vlan_cfi = 1;
                    }
                    SetVlanCfiAction set_vlan_cfi_action = 1;
                  }
                  SetVlanCfiActionCase set_vlan_cfi_action_case = 32;
                  message SetVlanIdActionCase {
                    message SetVlanIdAction {
                      uint32 vlan_id = 1;
                    }
                    SetVlanIdAction set_vlan_id_action = 1;
                  }
                  SetVlanIdActionCase set_vlan_id_action_case = 33;
                  message SetVlanPcpActionCase {
                    message SetVlanPcpAction {
                      uint32 vlan_pcp = 1;
                    }
                    SetVlanPcpAction set_vlan_pcp_action = 1;
                  }
                  SetVlanPcpActionCase set_vlan_pcp_action_case = 34;
                  message StripVlanActionCase {
                    message StripVlanAction {
                    }
                    StripVlanAction strip_vlan_action = 1;
                  }
                  StripVlanActionCase strip_vlan_action_case = 35;
                  message SwPathActionCase {
                    message SwPathAction {
                    }
                    SwPathAction sw_path_action = 1;
                  }
                  SwPathActionCase sw_path_action_case = 36;
                }
                Action action = 1;
                int32 order = 2;
              }
              repeated Action action = 1;
            }
            ApplyActions apply_actions = 1;
          }
          ApplyActionsCase apply_actions_case = 1;
          message ClearActionsCase {
            message ClearActions {
              message Action {
                message Action {
                  message ControllerActionCase {
                    message ControllerAction {
                      uint32 max_length = 1;
                    }
                    ControllerAction controller_action = 1;
                  }
                  ControllerActionCase controller_action_case = 1;
                  message CopyTtlInCase {
                    message CopyTtlIn {
                    }
                    CopyTtlIn copy_ttl_in = 1;
                  }
                  CopyTtlInCase copy_ttl_in_case = 2;
                  message CopyTtlOutCase {
                    message CopyTtlOut {
                    }
                    CopyTtlOut copy_ttl_out = 1;
                  }
                  CopyTtlOutCase copy_ttl_out_case = 3;
                  message DecMplsTtlCase {
                    message DecMplsTtl {
                    }
                    DecMplsTtl dec_mpls_ttl = 1;
                  }
                  DecMplsTtlCase dec_mpls_ttl_case = 4;
                  message DecNwTtlCase {
                    message DecNwTtl {
                    }
                    DecNwTtl dec_nw_ttl = 1;
                  }
                  DecNwTtlCase dec_nw_ttl_case = 5;
                  message DropActionCase {
                    message DropAction {
                    }
                    DropAction drop_action = 1;
                  }
                  DropActionCase drop_action_case = 6;
                  message FloodActionCase {
                    message FloodAction {
                    }
                    FloodAction flood_action = 1;
                  }
                  FloodActionCase flood_action_case = 7;
                  message FloodAllActionCase {
                    message FloodAllAction {
                    }
                    FloodAllAction flood_all_action = 1;
                  }
                  FloodAllActionCase flood_all_action_case = 8;
                  message GroupActionCase {
                    message GroupAction {
                      string group = 1;
                      uint32 group_id = 2;
                    }
                    GroupAction group_action = 1;
                  }
                  GroupActionCase group_action_case = 9;
                  message HwPathActionCase {
                    message HwPathAction {
                    }
                    HwPathAction hw_path_action = 1;
                  }
                  HwPathActionCase hw_path_action_case = 10;
                  message LoopbackActionCase {
                    message LoopbackAction {
                    }
                    LoopbackAction loopback_action = 1;
                  }
                  LoopbackActionCase loopback_action_case = 11;
                  message OutputActionCase {
                    message OutputAction {
                      uint32 max_length = 1;
                      string output_node_connector = 2;
                    }
                    OutputAction output_action = 1;
                  }
                  OutputActionCase output_action_case = 12;
                  message PopMplsActionCase {
                    message PopMplsAction {
                      uint32 ethernet_type = 1;
                    }
                    PopMplsAction pop_mpls_action = 1;
                  }
                  PopMplsActionCase pop_mpls_action_case = 13;
                  message PopPbbActionCase {
                    message PopPbbAction {
                    }
                    PopPbbAction pop_pbb_action = 1;
                  }
                  PopPbbActionCase pop_pbb_action_case = 14;
                  message PopVlanActionCase {
                    message PopVlanAction {
                    }
                    PopVlanAction pop_vlan_action = 1;
                  }
                  PopVlanActionCase pop_vlan_action_case = 15;
                  message PushMplsActionCase {
                    message PushMplsAction {
                      uint32 ethernet_type = 1;
                    }
                    PushMplsAction push_mpls_action = 1;
                  }
                  PushMplsActionCase push_mpls_action_case = 16;
                  message PushPbbActionCase {
                    message PushPbbAction {
                      uint32 ethernet_type = 1;
                    }
                    PushPbbAction push_pbb_action = 1;
                  }
                  PushPbbActionCase push_pbb_action_case = 17;
                  message PushVlanActionCase {
                    message PushVlanAction {
                      int32 cfi = 1;
                      uint32 ethernet_type = 2;
                      int32 pcp = 3;
                      int32 tag = 4;
                      uint32 vlan_id = 5;
                    }
                    PushVlanAction push_vlan_action = 1;
                  }
                  PushVlanActionCase push_vlan_action_case = 18;
                  message SetDlDstActionCase {
                    message SetDlDstAction {
                      string address = 1;
                    }
                    SetDlDstAction set_dl_dst_action = 1;
                  }
                  SetDlDstActionCase set_dl_dst_action_case = 19;
                  message SetDlSrcActionCase {
                    message SetDlSrcAction {
                      string address = 1;
                    }
                    SetDlSrcAction set_dl_src_action = 1;
                  }
                  SetDlSrcActionCase set_dl_src_action_case = 20;
                  message SetDlTypeActionCase {
                    message SetDlTypeAction {
                      uint32 dl_type = 1;
                    }
                    SetDlTypeAction set_dl_type_action = 1;
                  }
                  SetDlTypeActionCase set_dl_type_action_case = 21;
                  message SetFieldCase {
                    message SetField {
                      message EthernetMatch {
                        // Ethernet destination address.
                        // Ethernet destination address.
                        message EthernetDestination {
                          string address = 1;
                          string mask = 2;
                        }
                        EthernetDestination ethernet_destination = 1;
                        // Ethernet source address.
                        // Ethernet source address.
                        message EthernetSource {
                          string address = 1;
                          string mask = 2;
                        }
                        EthernetSource ethernet_source = 2;
                        // Ethernet frame type.
                        // Ethernet frame type.
                        message EthernetType {
                          uint32 type = 1;
                        }
                        EthernetType ethernet_type = 3;
                      }
                      EthernetMatch ethernet_match = 1;
                      message Icmpv4Match {
                        uint32 icmpv4_code = 1;
                        // ICMP type.
                        uint32 icmpv4_type = 2;
                      }
                      Icmpv4Match icmpv4_match = 2;
                      message Icmpv6Match {
                        uint32 icmpv6_code = 1;
                        // ICMP type.
                        uint32 icmpv6_type = 2;
                      }
                      Icmpv6Match icmpv6_match = 3;
                      string in_phy_port = 4;
                      string in_port = 5;
                      message IpMatch {
                        // IP DSCP (6 bits in ToS field).
                        uint32 ip_dscp = 1;
                        // IP ECN (2 bits in ToS field).
                        uint32 ip_ecn = 2;
                        // IP Proto (IPv4 or IPv6 Protocol Number).
                        enum IpProto {
                          IpProto_IPV4 = 0;
                          IpProto_IPV6 = 1;
                          IpProto_UNKNOWN = 2;
                        };
                        IpProto ip_proto = 3;
                        // IP protocol.
                        uint32 ip_protocol = 4;
                      }
                      IpMatch ip_match = 6;
                      message Layer_3Match {
                        message ArpMatch {
                          uint32 arp_op = 1;
                          // ARP source hardware address.
                          // ARP source hardware address.
                          message ArpSourceHardwareAddress {
                            string address = 1;
                            string mask = 2;
                          }
                          ArpSourceHardwareAddress arp_source_hardware_address = 2;
                          // ARP source IPv4 address.
                          string arp_source_transport_address = 3;
                          // ARP target hardware address.
                          // ARP target hardware address.
                          message ArpTargetHardwareAddress {
                            string address = 1;
                            string mask = 2;
                          }
                          ArpTargetHardwareAddress arp_target_hardware_address = 4;
                          // ARP target IPv4 address.
                          string arp_target_transport_address = 5;
                        }
                        ArpMatch arp_match = 1;
                        message Ipv4Match {
                          // IPv4 destination address.
                          string ipv4_destination = 1;
                          // IPv4 source address.
                          string ipv4_source = 2;
                        }
                        Ipv4Match ipv4_match = 2;
                        message Ipv6Match {
                          // IPv6 destination address.
                          string ipv6_destination = 1;
                          message Ipv6ExtHeader {
                            // IPv6 Extension Header field
                            uint32 ipv6_exthdr = 1;
                            uint32 ipv6_exthdr_mask = 2;
                          }
                          Ipv6ExtHeader ipv6_ext_header = 2;
                          message Ipv6Label {
                            uint32 flabel_mask = 1;
                            uint32 ipv6_flabel = 2;
                          }
                          Ipv6Label ipv6_label = 3;
                          // Link layer source address for neighbour discovery message
                          string ipv6_nd_sll = 4;
                          // IPv6 target address for neighbour discovery message
                          string ipv6_nd_target = 5;
                          // Link layer target address for neighbour discovery message
                          string ipv6_nd_tll = 6;
                          // IPv6 source address.
                          string ipv6_source = 7;
                        }
                        Ipv6Match ipv6_match = 3;
                      }
                      Layer_3Match layer_3_match = 7;
                      message Layer_4Match {
                        message SctpMatch {
                          // SCTP destination port.
                          uint32 sctp_destination_port = 1;
                          // SCTP source port.
                          uint32 sctp_source_port = 2;
                        }
                        SctpMatch sctp_match = 1;
                        message TcpMatch {
                          // TCP destination port.
                          uint32 tcp_destination_port = 1;
                          // TCP source port.
                          uint32 tcp_source_port = 2;
                        }
                        TcpMatch tcp_match = 2;
                        message UdpMatch {
                          // UDP destination port.
                          uint32 udp_destination_port = 1;
                          // UDP source port.
                          uint32 udp_source_port = 2;
                        }
                        UdpMatch udp_match = 3;
                      }
                      Layer_4Match layer_4_match = 8;
                      message Metadata {
                        uint64 metadata = 1;
                        uint64 metadata_mask = 2;
                      }
                      Metadata metadata = 9;
                      message ProtocolMatchFields {
                        // BoS bit in the first MPLS shim header
                        uint32 mpls_bos = 1;
                        // Label in the first MPLS shim header
                        uint32 mpls_label = 2;
                        // TC in the first MPLS shim header
                        uint32 mpls_tc = 3;
                        message Pbb {
                          // I-SID in the first PBB service instance tag
                          uint32 pbb_isid = 1;
                          uint32 pbb_mask = 2;
                        }
                        Pbb pbb = 4;
                      }
                      ProtocolMatchFields protocol_match_fields = 10;
                      message Tunnel {
                        // Metadata associated in the logical port
                        uint64 tunnel_id = 1;
                        uint64 tunnel_mask = 2;
                      }
                      Tunnel tunnel = 11;
                      message VlanMatch {
                        // VLAN id.
                        // VLAN id.
                        message VlanId {
                          uint32 vlan_id = 1;
                          bool vlan_id_present = 2;
                        }
                        VlanId vlan_id = 1;
                        // VLAN priority.
                        uint32 vlan_pcp = 2;
                      }
                      VlanMatch vlan_match = 12;
                    }
                    SetField set_field = 1;
                  }
                  SetFieldCase set_field_case = 22;
                  message SetMplsTtlActionCase {
                    message SetMplsTtlAction {
                      uint32 mpls_ttl = 1;
                    }
                    SetMplsTtlAction set_mpls_ttl_action = 1;
                  }
                  SetMplsTtlActionCase set_mpls_ttl_action_case = 23;
                  message SetNextHopActionCase {
                    message SetNextHopAction {
                      message Address {
                        message Ipv4 {
                          string ipv4_address = 1;
                        }
                        Ipv4 ipv4 = 1;
                        message Ipv6 {
                          string ipv6_address = 1;
                        }
                        Ipv6 ipv6 = 2;
                      }
                      Address address = 1;
                    }
                    SetNextHopAction set_next_hop_action = 1;
                  }
                  SetNextHopActionCase set_next_hop_action_case = 24;
                  message SetNwDstActionCase {
                    message SetNwDstAction {
                      message Address {
                        message Ipv4 {
                          string ipv4_address = 1;
                        }
                        Ipv4 ipv4 = 1;
                        message Ipv6 {
                          string ipv6_address = 1;
                        }
                        Ipv6 ipv6 = 2;
                      }
                      Address address = 1;
                    }
                    SetNwDstAction set_nw_dst_action = 1;
                  }
                  SetNwDstActionCase set_nw_dst_action_case = 25;
                  message SetNwSrcActionCase {
                    message SetNwSrcAction {
                      message Address {
                        message Ipv4 {
                          string ipv4_address = 1;
                        }
                        Ipv4 ipv4 = 1;
                        message Ipv6 {
                          string ipv6_address = 1;
                        }
                        Ipv6 ipv6 = 2;
                      }
                      Address address = 1;
                    }
                    SetNwSrcAction set_nw_src_action = 1;
                  }
                  SetNwSrcActionCase set_nw_src_action_case = 26;
                  message SetNwTosActionCase {
                    message SetNwTosAction {
                      int32 tos = 1;
                    }
                    SetNwTosAction set_nw_tos_action = 1;
                  }
                  SetNwTosActionCase set_nw_tos_action_case = 27;
                  message SetNwTtlActionCase {
                    message SetNwTtlAction {
                      uint32 nw_ttl = 1;
                    }
                    SetNwTtlAction set_nw_ttl_action = 1;
                  }
                  SetNwTtlActionCase set_nw_ttl_action_case = 28;
                  message SetQueueActionCase {
                    message SetQueueAction {
                      string queue = 1;
                      uint32 queue_id = 2;
                    }
                    SetQueueAction set_queue_action = 1;
                  }
                  SetQueueActionCase set_queue_action_case = 29;
                  message SetTpDstActionCase {
                    message SetTpDstAction {
                      uint32 port = 1;
                    }
                    SetTpDstAction set_tp_dst_action = 1;
                  }
                  SetTpDstActionCase set_tp_dst_action_case = 30;
                  message SetTpSrcActionCase {
                    message SetTpSrcAction {
                      uint32 port = 1;
                    }
                    SetTpSrcAction set_tp_src_action = 1;
                  }
                  SetTpSrcActionCase set_tp_src_action_case = 31;
                  message SetVlanCfiActionCase {
                    message SetVlanCfiAction {
                      int32 vlan_cfi = 1;
                    }
                    SetVlanCfiAction set_vlan_cfi_action = 1;
                  }
                  SetVlanCfiActionCase set_vlan_cfi_action_case = 32;
                  message SetVlanIdActionCase {
                    message SetVlanIdAction {
                      uint32 vlan_id = 1;
                    }
                    SetVlanIdAction set_vlan_id_action = 1;
                  }
                  SetVlanIdActionCase set_vlan_id_action_case = 33;
                  message SetVlanPcpActionCase {
                    message SetVlanPcpAction {
                      uint32 vlan_pcp = 1;
                    }
                    SetVlanPcpAction set_vlan_pcp_action = 1;
                  }
                  SetVlanPcpActionCase set_vlan_pcp_action_case = 34;
                  message StripVlanActionCase {
                    message StripVlanAction {
                    }
                    StripVlanAction strip_vlan_action = 1;
                  }
                  StripVlanActionCase strip_vlan_action_case = 35;
                  message SwPathActionCase {
                    message SwPathAction {
                    }
                    SwPathAction sw_path_action = 1;
                  }
                  SwPathActionCase sw_path_action_case = 36;
                }
                Action action = 1;
                int32 order = 2;
              }
              repeated Action action = 1;
            }
            ClearActions clear_actions = 1;
          }
          ClearActionsCase clear_actions_case = 2;
          message GoToTableCase {
            message GoToTable {
              uint32 table_id = 1;
            }
            GoToTable go_to_table = 1;
          }
          GoToTableCase go_to_table_case = 3;
          message MeterCase {
            message Meter {
              uint32 meter_id = 1;
            }
            Meter meter = 1;
          }
          MeterCase meter_case = 4;
          message WriteActionsCase {
            message WriteActions {
              message Action {
                message Action {
                  message ControllerActionCase {
                    message ControllerAction {
                      uint32 max_length = 1;
                    }
                    ControllerAction controller_action = 1;
                  }
                  ControllerActionCase controller_action_case = 1;
                  message CopyTtlInCase {
                    message CopyTtlIn {
                    }
                    CopyTtlIn copy_ttl_in = 1;
                  }
                  CopyTtlInCase copy_ttl_in_case = 2;
                  message CopyTtlOutCase {
                    message CopyTtlOut {
                    }
                    CopyTtlOut copy_ttl_out = 1;
                  }
                  CopyTtlOutCase copy_ttl_out_case = 3;
                  message DecMplsTtlCase {
                    message DecMplsTtl {
                    }
                    DecMplsTtl dec_mpls_ttl = 1;
                  }
                  DecMplsTtlCase dec_mpls_ttl_case = 4;
                  message DecNwTtlCase {
                    message DecNwTtl {
                    }
                    DecNwTtl dec_nw_ttl = 1;
                  }
                  DecNwTtlCase dec_nw_ttl_case = 5;
                  message DropActionCase {
                    message DropAction {
                    }
                    DropAction drop_action = 1;
                  }
                  DropActionCase drop_action_case = 6;
                  message FloodActionCase {
                    message FloodAction {
                    }
                    FloodAction flood_action = 1;
                  }
                  FloodActionCase flood_action_case = 7;
                  message FloodAllActionCase {
                    message FloodAllAction {
                    }
                    FloodAllAction flood_all_action = 1;
                  }
                  FloodAllActionCase flood_all_action_case = 8;
                  message GroupActionCase {
                    message GroupAction {
                      string group = 1;
                      uint32 group_id = 2;
                    }
                    GroupAction group_action = 1;
                  }
                  GroupActionCase group_action_case = 9;
                  message HwPathActionCase {
                    message HwPathAction {
                    }
                    HwPathAction hw_path_action = 1;
                  }
                  HwPathActionCase hw_path_action_case = 10;
                  message LoopbackActionCase {
                    message LoopbackAction {
                    }
                    LoopbackAction loopback_action = 1;
                  }
                  LoopbackActionCase loopback_action_case = 11;
                  message OutputActionCase {
                    message OutputAction {
                      uint32 max_length = 1;
                      string output_node_connector = 2;
                    }
                    OutputAction output_action = 1;
                  }
                  OutputActionCase output_action_case = 12;
                  message PopMplsActionCase {
                    message PopMplsAction {
                      uint32 ethernet_type = 1;
                    }
                    PopMplsAction pop_mpls_action = 1;
                  }
                  PopMplsActionCase pop_mpls_action_case = 13;
                  message PopPbbActionCase {
                    message PopPbbAction {
                    }
                    PopPbbAction pop_pbb_action = 1;
                  }
                  PopPbbActionCase pop_pbb_action_case = 14;
                  message PopVlanActionCase {
                    message PopVlanAction {
                    }
                    PopVlanAction pop_vlan_action = 1;
                  }
                  PopVlanActionCase pop_vlan_action_case = 15;
                  message PushMplsActionCase {
                    message PushMplsAction {
                      uint32 ethernet_type = 1;
                    }
                    PushMplsAction push_mpls_action = 1;
                  }
                  PushMplsActionCase push_mpls_action_case = 16;
                  message PushPbbActionCase {
                    message PushPbbAction {
                      uint32 ethernet_type = 1;
                    }
                    PushPbbAction push_pbb_action = 1;
                  }
                  PushPbbActionCase push_pbb_action_case = 17;
                  message PushVlanActionCase {
                    message PushVlanAction {
                      int32 cfi = 1;
                      uint32 ethernet_type = 2;
                      int32 pcp = 3;
                      int32 tag = 4;
                      uint32 vlan_id = 5;
                    }
                    PushVlanAction push_vlan_action = 1;
                  }
                  PushVlanActionCase push_vlan_action_case = 18;
                  message SetDlDstActionCase {
                    message SetDlDstAction {
                      string address = 1;
                    }
                    SetDlDstAction set_dl_dst_action = 1;
                  }
                  SetDlDstActionCase set_dl_dst_action_case = 19;
                  message SetDlSrcActionCase {
                    message SetDlSrcAction {
                      string address = 1;
                    }
                    SetDlSrcAction set_dl_src_action = 1;
                  }
                  SetDlSrcActionCase set_dl_src_action_case = 20;
                  message SetDlTypeActionCase {
                    message SetDlTypeAction {
                      uint32 dl_type = 1;
                    }
                    SetDlTypeAction set_dl_type_action = 1;
                  }
                  SetDlTypeActionCase set_dl_type_action_case = 21;
                  message SetFieldCase {
                    message SetField {
                      message EthernetMatch {
                        // Ethernet destination address.
                        // Ethernet destination address.
                        message EthernetDestination {
                          string address = 1;
                          string mask = 2;
                        }
                        EthernetDestination ethernet_destination = 1;
                        // Ethernet source address.
                        // Ethernet source address.
                        message EthernetSource {
                          string address = 1;
                          string mask = 2;
                        }
                        EthernetSource ethernet_source = 2;
                        // Ethernet frame type.
                        // Ethernet frame type.
                        message EthernetType {
                          uint32 type = 1;
                        }
                        EthernetType ethernet_type = 3;
                      }
                      EthernetMatch ethernet_match = 1;
                      message Icmpv4Match {
                        uint32 icmpv4_code = 1;
                        // ICMP type.
                        uint32 icmpv4_type = 2;
                      }
                      Icmpv4Match icmpv4_match = 2;
                      message Icmpv6Match {
                        uint32 icmpv6_code = 1;
                        // ICMP type.
                        uint32 icmpv6_type = 2;
                      }
                      Icmpv6Match icmpv6_match = 3;
                      string in_phy_port = 4;
                      string in_port = 5;
                      message IpMatch {
                        // IP DSCP (6 bits in ToS field).
                        uint32 ip_dscp = 1;
                        // IP ECN (2 bits in ToS field).
                        uint32 ip_ecn = 2;
                        // IP Proto (IPv4 or IPv6 Protocol Number).
                        enum IpProto {
                          IpProto_IPV4 = 0;
                          IpProto_IPV6 = 1;
                          IpProto_UNKNOWN = 2;
                        };
                        IpProto ip_proto = 3;
                        // IP protocol.
                        uint32 ip_protocol = 4;
                      }
                      IpMatch ip_match = 6;
                      message Layer_3Match {
                        message ArpMatch {
                          uint32 arp_op = 1;
                          // ARP source hardware address.
                          // ARP source hardware address.
                          message ArpSourceHardwareAddress {
                            string address = 1;
                            string mask = 2;
                          }
                          ArpSourceHardwareAddress arp_source_hardware_address = 2;
                          // ARP source IPv4 address.
                          string arp_source_transport_address = 3;
                          // ARP target hardware address.
                          // ARP target hardware address.
                          message ArpTargetHardwareAddress {
                            string address = 1;
                            string mask = 2;
                          }
                          ArpTargetHardwareAddress arp_target_hardware_address = 4;
                          // ARP target IPv4 address.
                          string arp_target_transport_address = 5;
                        }
                        ArpMatch arp_match = 1;
                        message Ipv4Match {
                          // IPv4 destination address.
                          string ipv4_destination = 1;
                          // IPv4 source address.
                          string ipv4_source = 2;
                        }
                        Ipv4Match ipv4_match = 2;
                        message Ipv6Match {
                          // IPv6 destination address.
                          string ipv6_destination = 1;
                          message Ipv6ExtHeader {
                            // IPv6 Extension Header field
                            uint32 ipv6_exthdr = 1;
                            uint32 ipv6_exthdr_mask = 2;
                          }
                          Ipv6ExtHeader ipv6_ext_header = 2;
                          message Ipv6Label {
                            uint32 flabel_mask = 1;
                            uint32 ipv6_flabel = 2;
                          }
                          Ipv6Label ipv6_label = 3;
                          // Link layer source address for neighbour discovery message
                          string ipv6_nd_sll = 4;
                          // IPv6 target address for neighbour discovery message
                          string ipv6_nd_target = 5;
                          // Link layer target address for neighbour discovery message
                          string ipv6_nd_tll = 6;
                          // IPv6 source address.
                          string ipv6_source = 7;
                        }
                        Ipv6Match ipv6_match = 3;
                      }
                      Layer_3Match layer_3_match = 7;
                      message Layer_4Match {
                        message SctpMatch {
                          // SCTP destination port.
                          uint32 sctp_destination_port = 1;
                          // SCTP source port.
                          uint32 sctp_source_port = 2;
                        }
                        SctpMatch sctp_match = 1;
                        message TcpMatch {
                          // TCP destination port.
                          uint32 tcp_destination_port = 1;
                          // TCP source port.
                          uint32 tcp_source_port = 2;
                        }
                        TcpMatch tcp_match = 2;
                        message UdpMatch {
                          // UDP destination port.
                          uint32 udp_destination_port = 1;
                          // UDP source port.
                          uint32 udp_source_port = 2;
                        }
                        UdpMatch udp_match = 3;
                      }
                      Layer_4Match layer_4_match = 8;
                      message Metadata {
                        uint64 metadata = 1;
                        uint64 metadata_mask = 2;
                      }
                      Metadata metadata = 9;
                      message ProtocolMatchFields {
                        // BoS bit in the first MPLS shim header
                        uint32 mpls_bos = 1;
                        // Label in the first MPLS shim header
                        uint32 mpls_label = 2;
                        // TC in the first MPLS shim header
                        uint32 mpls_tc = 3;
                        message Pbb {
                          // I-SID in the first PBB service instance tag
                          uint32 pbb_isid = 1;
                          uint32 pbb_mask = 2;
                        }
                        Pbb pbb = 4;
                      }
                      ProtocolMatchFields protocol_match_fields = 10;
                      message Tunnel {
                        // Metadata associated in the logical port
                        uint64 tunnel_id = 1;
                        uint64 tunnel_mask = 2;
                      }
                      Tunnel tunnel = 11;
                      message VlanMatch {
                        // VLAN id.
                        // VLAN id.
                        message VlanId {
                          uint32 vlan_id = 1;
                          bool vlan_id_present = 2;
                        }
                        VlanId vlan_id = 1;
                        // VLAN priority.
                        uint32 vlan_pcp = 2;
                      }
                      VlanMatch vlan_match = 12;
                    }
                    SetField set_field = 1;
                  }
                  SetFieldCase set_field_case = 22;
                  message SetMplsTtlActionCase {
                    message SetMplsTtlAction {
                      uint32 mpls_ttl = 1;
                    }
                    SetMplsTtlAction set_mpls_ttl_action = 1;
                  }
                  SetMplsTtlActionCase set_mpls_ttl_action_case = 23;
                  message SetNextHopActionCase {
                    message SetNextHopAction {
                      message Address {
                        message Ipv4 {
                          string ipv4_address = 1;
                        }
                        Ipv4 ipv4 = 1;
                        message Ipv6 {
                          string ipv6_address = 1;
                        }
                        Ipv6 ipv6 = 2;
                      }
                      Address address = 1;
                    }
                    SetNextHopAction set_next_hop_action = 1;
                  }
                  SetNextHopActionCase set_next_hop_action_case = 24;
                  message SetNwDstActionCase {
                    message SetNwDstAction {
                      message Address {
                        message Ipv4 {
                          string ipv4_address = 1;
                        }
                        Ipv4 ipv4 = 1;
                        message Ipv6 {
                          string ipv6_address = 1;
                        }
                        Ipv6 ipv6 = 2;
                      }
                      Address address = 1;
                    }
                    SetNwDstAction set_nw_dst_action = 1;
                  }
                  SetNwDstActionCase set_nw_dst_action_case = 25;
                  message SetNwSrcActionCase {
                    message SetNwSrcAction {
                      message Address {
                        message Ipv4 {
                          string ipv4_address = 1;
                        }
                        Ipv4 ipv4 = 1;
                        message Ipv6 {
                          string ipv6_address = 1;
                        }
                        Ipv6 ipv6 = 2;
                      }
                      Address address = 1;
                    }
                    SetNwSrcAction set_nw_src_action = 1;
                  }
                  SetNwSrcActionCase set_nw_src_action_case = 26;
                  message SetNwTosActionCase {
                    message SetNwTosAction {
                      int32 tos = 1;
                    }
                    SetNwTosAction set_nw_tos_action = 1;
                  }
                  SetNwTosActionCase set_nw_tos_action_case = 27;
                  message SetNwTtlActionCase {
                    message SetNwTtlAction {
                      uint32 nw_ttl = 1;
                    }
                    SetNwTtlAction set_nw_ttl_action = 1;
                  }
                  SetNwTtlActionCase set_nw_ttl_action_case = 28;
                  message SetQueueActionCase {
                    message SetQueueAction {
                      string queue = 1;
                      uint32 queue_id = 2;
                    }
                    SetQueueAction set_queue_action = 1;
                  }
                  SetQueueActionCase set_queue_action_case = 29;
                  message SetTpDstActionCase {
                    message SetTpDstAction {
                      uint32 port = 1;
                    }
                    SetTpDstAction set_tp_dst_action = 1;
                  }
                  SetTpDstActionCase set_tp_dst_action_case = 30;
                  message SetTpSrcActionCase {
                    message SetTpSrcAction {
                      uint32 port = 1;
                    }
                    SetTpSrcAction set_tp_src_action = 1;
                  }
                  SetTpSrcActionCase set_tp_src_action_case = 31;
                  message SetVlanCfiActionCase {
                    message SetVlanCfiAction {
                      int32 vlan_cfi = 1;
                    }
                    SetVlanCfiAction set_vlan_cfi_action = 1;
                  }
                  SetVlanCfiActionCase set_vlan_cfi_action_case = 32;
                  message SetVlanIdActionCase {
                    message SetVlanIdAction {
                      uint32 vlan_id = 1;
                    }
                    SetVlanIdAction set_vlan_id_action = 1;
                  }
                  SetVlanIdActionCase set_vlan_id_action_case = 33;
                  message SetVlanPcpActionCase {
                    message SetVlanPcpAction {
                      uint32 vlan_pcp = 1;
                    }
                    SetVlanPcpAction set_vlan_pcp_action = 1;
                  }
                  SetVlanPcpActionCase set_vlan_pcp_action_case = 34;
                  message StripVlanActionCase {
                    message StripVlanAction {
                    }
                    StripVlanAction strip_vlan_action = 1;
                  }
                  StripVlanActionCase strip_vlan_action_case = 35;
                  message SwPathActionCase {
                    message SwPathAction {
                    }
                    SwPathAction sw_path_action = 1;
                  }
                  SwPathActionCase sw_path_action_case = 36;
                }
                Action action = 1;
                int32 order = 2;
              }
              repeated Action action = 1;
            }
            WriteActions write_actions = 1;
          }
          WriteActionsCase write_actions_case = 5;
          message WriteMetadataCase {
            message WriteMetadata {
              uint64 metadata = 1;
              uint64 metadata_mask = 2;
            }
            WriteMetadata write_metadata = 1;
          }
          WriteMetadataCase write_metadata_case = 6;
        }
        Instruction instruction = 1;
        int32 order = 2;
      }
      repeated Instruction instruction = 1;
    }
    Instructions instructions = 14;
    message Match {
      message EthernetMatch {
        // Ethernet destination address.
        // Ethernet destination address.
        message EthernetDestination {
          string address = 1;
          string mask = 2;
        }
        EthernetDestination ethernet_destination = 1;
        // Ethernet source address.
        // Ethernet source address.
        message EthernetSource {
          string address = 1;
          string mask = 2;
        }
        EthernetSource ethernet_source = 2;
        // Ethernet frame type.
        // Ethernet frame type.
        message EthernetType {
          uint32 type = 1;
        }
        EthernetType ethernet_type = 3;
      }
      EthernetMatch ethernet_match = 1;
      message Icmpv4Match {
        uint32 icmpv4_code = 1;
        // ICMP type.
        uint32 icmpv4_type = 2;
      }
      Icmpv4Match icmpv4_match = 2;
      message Icmpv6Match {
        uint32 icmpv6_code = 1;
        // ICMP type.
        uint32 icmpv6_type = 2;
      }
      Icmpv6Match icmpv6_match = 3;
      string in_phy_port = 4;
      string in_port = 5;
      message IpMatch {
        // IP DSCP (6 bits in ToS field).
        uint32 ip_dscp = 1;
        // IP ECN (2 bits in ToS field).
        uint32 ip_ecn = 2;
        // IP Proto (IPv4 or IPv6 Protocol Number).
        enum IpProto {
          IpProto_IPV4 = 0;
          IpProto_IPV6 = 1;
          IpProto_UNKNOWN = 2;
        };
        IpProto ip_proto = 3;
        // IP protocol.
        uint32 ip_protocol = 4;
      }
      IpMatch ip_match = 6;
      message Layer_3Match {
        message ArpMatch {
          uint32 arp_op = 1;
          // ARP source hardware address.
          // ARP source hardware address.
          message ArpSourceHardwareAddress {
            string address = 1;
            string mask = 2;
          }
          ArpSourceHardwareAddress arp_source_hardware_address = 2;
          // ARP source IPv4 address.
          string arp_source_transport_address = 3;
          // ARP target hardware address.
          // ARP target hardware address.
          message ArpTargetHardwareAddress {
            string address = 1;
            string mask = 2;
          }
          ArpTargetHardwareAddress arp_target_hardware_address = 4;
          // ARP target IPv4 address.
          string arp_target_transport_address = 5;
        }
        ArpMatch arp_match = 1;
        message Ipv4Match {
          // IPv4 destination address.
          string ipv4_destination = 1;
          // IPv4 source address.
          string ipv4_source = 2;
        }
        Ipv4Match ipv4_match = 2;
        message Ipv6Match {
          // IPv6 destination address.
          string ipv6_destination = 1;
          message Ipv6ExtHeader {
            // IPv6 Extension Header field
            uint32 ipv6_exthdr = 1;
            uint32 ipv6_exthdr_mask = 2;
          }
          Ipv6ExtHeader ipv6_ext_header = 2;
          message Ipv6Label {
            uint32 flabel_mask = 1;
            uint32 ipv6_flabel = 2;
          }
          Ipv6Label ipv6_label = 3;
          // Link layer source address for neighbour discovery message
          string ipv6_nd_sll = 4;
          // IPv6 target address for neighbour discovery message
          string ipv6_nd_target = 5;
          // Link layer target address for neighbour discovery message
          string ipv6_nd_tll = 6;
          // IPv6 source address.
          string ipv6_source = 7;
        }
        Ipv6Match ipv6_match = 3;
      }
      Layer_3Match layer_3_match = 7;
      message Layer_4Match {
        message SctpMatch {
          // SCTP destination port.
          uint32 sctp_destination_port = 1;
          // SCTP source port.
          uint32 sctp_source_port = 2;
        }
        SctpMatch sctp_match = 1;
        message TcpMatch {
          // TCP destination port.
          uint32 tcp_destination_port = 1;
          // TCP source port.
          uint32 tcp_source_port = 2;
        }
        TcpMatch tcp_match = 2;
        message UdpMatch {
          // UDP destination port.
          uint32 udp_destination_port = 1;
          // UDP source port.
          uint32 udp_source_port = 2;
        }
        UdpMatch udp_match = 3;
      }
      Layer_4Match layer_4_match = 8;
      message Metadata {
        uint64 metadata = 1;
        uint64 metadata_mask = 2;
      }
      Metadata metadata = 9;
      message ProtocolMatchFields {
        // BoS bit in the first MPLS shim header
        uint32 mpls_bos = 1;
        // Label in the first MPLS shim header
        uint32 mpls_label = 2;
        // TC in the first MPLS shim header
        uint32 mpls_tc = 3;
        message Pbb {
          // I-SID in the first PBB service instance tag
          uint32 pbb_isid = 1;
          uint32 pbb_mask = 2;
        }
        Pbb pbb = 4;
      }
      ProtocolMatchFields protocol_match_fields = 10;
      message Tunnel {
        // Metadata associated in the logical port
        uint64 tunnel_id = 1;
        uint64 tunnel_mask = 2;
      }
      Tunnel tunnel = 11;
      message VlanMatch {
        // VLAN id.
        // VLAN id.
        message VlanId {
          uint32 vlan_id = 1;
          bool vlan_id_present = 2;
        }
        VlanId vlan_id = 1;
        // VLAN priority.
        uint32 vlan_pcp = 2;
      }
      VlanMatch vlan_match = 12;
    }
    Match match = 15;
    uint32 out_group = 16;
    uint64 out_port = 17;
    uint64 packet_count = 18;
    uint32 priority = 19;
    bool strict = 20;
    uint32 table_id = 21;
  }
  repeated FlowAndStatisticsMapList flow_and_statistics_map_list = 1;
  string id = 2;
  bool moreReplies = 3;
  message NodeConnector {
    string id = 1;
  }
  repeated NodeConnector node_connector = 4;
  uint64 transaction_id = 5;
}

// Do not delete the lines below, they preserve tag information for goyang.
// goyang-tag AggregateFlowStatisticsUpdate byte_count/uint64 1
// goyang-tag AggregateFlowStatisticsUpdate flow_count/uint32 2
// goyang-tag AggregateFlowStatisticsUpdate id/string 3
// goyang-tag AggregateFlowStatisticsUpdate moreReplies/bool 4
// goyang-tag AggregateFlowStatisticsUpdate node_connector/NodeConnector[] 5
// goyang-tag AggregateFlowStatisticsUpdate packet_count/uint64 6
// goyang-tag AggregateFlowStatisticsUpdate transaction_id/uint64 7
// goyang-tag AggregateFlowStatisticsUpdate_NodeConnector id/string 1
// goyang-tag FlowsStatisticsUpdate flow_and_statistics_map_list/FlowAndStatisticsMapList[] 1
// goyang-tag FlowsStatisticsUpdate id/string 2
// goyang-tag FlowsStatisticsUpdate moreReplies/bool 3
// goyang-tag FlowsStatisticsUpdate node_connector/NodeConnector[] 4
// goyang-tag FlowsStatisticsUpdate transaction_id/uint64 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList barrier/bool 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList buffer_id/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList byte_count/uint64 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList container_name/string 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList cookie/uint64 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList cookie_mask/uint64 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList duration/Duration 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList flags/Flags 8
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList flow_id/string 9
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList flow_name/string 10
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList hard_timeout/uint32 11
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList idle_timeout/uint32 12
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList installHw/bool 13
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList instructions/Instructions 14
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList match/Match 15
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList out_group/uint32 16
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList out_port/uint64 17
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList packet_count/uint64 18
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList priority/uint32 19
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList strict/bool 20
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList table_id/uint32 21
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Duration nanosecond/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Duration second/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction apply_actions_case/ApplyActionsCase 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction clear_actions_case/ClearActionsCase 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction go_to_table_case/GoToTableCase 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction meter_case/MeterCase 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction write_actions_case/WriteActionsCase 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction write_metadata_case/WriteMetadataCase 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase apply_actions/ApplyActions 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions action/Action[] 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action action/Action 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action order/int32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action controller_action_case/ControllerActionCase 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action copy_ttl_in_case/CopyTtlInCase 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action copy_ttl_out_case/CopyTtlOutCase 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action dec_mpls_ttl_case/DecMplsTtlCase 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action dec_nw_ttl_case/DecNwTtlCase 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action drop_action_case/DropActionCase 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action flood_action_case/FloodActionCase 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action flood_all_action_case/FloodAllActionCase 8
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action group_action_case/GroupActionCase 9
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action hw_path_action_case/HwPathActionCase 10
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action loopback_action_case/LoopbackActionCase 11
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action output_action_case/OutputActionCase 12
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action pop_mpls_action_case/PopMplsActionCase 13
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action pop_pbb_action_case/PopPbbActionCase 14
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action pop_vlan_action_case/PopVlanActionCase 15
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action push_mpls_action_case/PushMplsActionCase 16
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action push_pbb_action_case/PushPbbActionCase 17
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action push_vlan_action_case/PushVlanActionCase 18
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_dl_dst_action_case/SetDlDstActionCase 19
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_dl_src_action_case/SetDlSrcActionCase 20
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_dl_type_action_case/SetDlTypeActionCase 21
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_field_case/SetFieldCase 22
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_mpls_ttl_action_case/SetMplsTtlActionCase 23
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_next_hop_action_case/SetNextHopActionCase 24
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_nw_dst_action_case/SetNwDstActionCase 25
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_nw_src_action_case/SetNwSrcActionCase 26
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_nw_tos_action_case/SetNwTosActionCase 27
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_nw_ttl_action_case/SetNwTtlActionCase 28
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_queue_action_case/SetQueueActionCase 29
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_tp_dst_action_case/SetTpDstActionCase 30
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_tp_src_action_case/SetTpSrcActionCase 31
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_vlan_cfi_action_case/SetVlanCfiActionCase 32
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_vlan_id_action_case/SetVlanIdActionCase 33
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action set_vlan_pcp_action_case/SetVlanPcpActionCase 34
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action strip_vlan_action_case/StripVlanActionCase 35
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action sw_path_action_case/SwPathActionCase 36
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_ControllerActionCase controller_action/ControllerAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_ControllerActionCase_ControllerAction max_length/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_CopyTtlInCase copy_ttl_in/CopyTtlIn 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_CopyTtlOutCase copy_ttl_out/CopyTtlOut 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_DecMplsTtlCase dec_mpls_ttl/DecMplsTtl 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_DecNwTtlCase dec_nw_ttl/DecNwTtl 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_DropActionCase drop_action/DropAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_FloodActionCase flood_action/FloodAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_FloodAllActionCase flood_all_action/FloodAllAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_GroupActionCase group_action/GroupAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_GroupActionCase_GroupAction group/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_GroupActionCase_GroupAction group_id/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_HwPathActionCase hw_path_action/HwPathAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_LoopbackActionCase loopback_action/LoopbackAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_OutputActionCase output_action/OutputAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_OutputActionCase_OutputAction max_length/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_OutputActionCase_OutputAction output_node_connector/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PopMplsActionCase pop_mpls_action/PopMplsAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PopMplsActionCase_PopMplsAction ethernet_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PopPbbActionCase pop_pbb_action/PopPbbAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PopVlanActionCase pop_vlan_action/PopVlanAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PushMplsActionCase push_mpls_action/PushMplsAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PushMplsActionCase_PushMplsAction ethernet_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PushPbbActionCase push_pbb_action/PushPbbAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PushPbbActionCase_PushPbbAction ethernet_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PushVlanActionCase push_vlan_action/PushVlanAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PushVlanActionCase_PushVlanAction cfi/int32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PushVlanActionCase_PushVlanAction ethernet_type/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PushVlanActionCase_PushVlanAction pcp/int32 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PushVlanActionCase_PushVlanAction tag/int32 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_PushVlanActionCase_PushVlanAction vlan_id/uint32 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetDlDstActionCase set_dl_dst_action/SetDlDstAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetDlDstActionCase_SetDlDstAction address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetDlSrcActionCase set_dl_src_action/SetDlSrcAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetDlSrcActionCase_SetDlSrcAction address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetDlTypeActionCase set_dl_type_action/SetDlTypeAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetDlTypeActionCase_SetDlTypeAction dl_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase set_field/SetField 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField ethernet_match/EthernetMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField icmpv4_match/Icmpv4Match 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField icmpv6_match/Icmpv6Match 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField in_phy_port/string 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField in_port/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField ip_match/IpMatch 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField layer_3_match/Layer_3Match 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField layer_4_match/Layer_4Match 8
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField metadata/Metadata 9
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField protocol_match_fields/ProtocolMatchFields 10
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField tunnel/Tunnel 11
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField vlan_match/VlanMatch 12
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_destination/EthernetDestination 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_source/EthernetSource 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_type/EthernetType 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetDestination address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetDestination mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetSource address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetSource mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetType type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Icmpv4Match icmpv4_code/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Icmpv4Match icmpv4_type/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Icmpv6Match icmpv6_code/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Icmpv6Match icmpv6_type/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_IpMatch ip_dscp/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_IpMatch ip_ecn/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_IpMatch ip_proto/IpProto 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_IpMatch ip_protocol/uint32 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match arp_match/ArpMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match ipv4_match/Ipv4Match 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match ipv6_match/Ipv6Match 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_op/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_source_hardware_address/ArpSourceHardwareAddress 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_source_transport_address/string 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_target_hardware_address/ArpTargetHardwareAddress 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_target_transport_address/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpSourceHardwareAddress address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpSourceHardwareAddress mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpTargetHardwareAddress address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpTargetHardwareAddress mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv4Match ipv4_destination/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv4Match ipv4_source/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_destination/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_ext_header/Ipv6ExtHeader 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_label/Ipv6Label 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_sll/string 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_target/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_tll/string 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_source/string 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6ExtHeader ipv6_exthdr/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6ExtHeader ipv6_exthdr_mask/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6Label flabel_mask/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6Label ipv6_flabel/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_4Match sctp_match/SctpMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_4Match tcp_match/TcpMatch 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_4Match udp_match/UdpMatch 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_4Match_SctpMatch sctp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_4Match_SctpMatch sctp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_4Match_TcpMatch tcp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_4Match_TcpMatch tcp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_4Match_UdpMatch udp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Layer_4Match_UdpMatch udp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Metadata metadata/uint64 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Metadata metadata_mask/uint64 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_bos/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_label/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_tc/uint32 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields pbb/Pbb 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields_Pbb pbb_isid/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields_Pbb pbb_mask/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Tunnel tunnel_id/uint64 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_Tunnel tunnel_mask/uint64 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_VlanMatch vlan_id/VlanId 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_VlanMatch vlan_pcp/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_VlanMatch_VlanId vlan_id/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetFieldCase_SetField_VlanMatch_VlanId vlan_id_present/bool 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetMplsTtlActionCase set_mpls_ttl_action/SetMplsTtlAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetMplsTtlActionCase_SetMplsTtlAction mpls_ttl/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNextHopActionCase set_next_hop_action/SetNextHopAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNextHopActionCase_SetNextHopAction address/Address 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address ipv4/Ipv4 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address ipv6/Ipv6 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwDstActionCase set_nw_dst_action/SetNwDstAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwDstActionCase_SetNwDstAction address/Address 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address ipv4/Ipv4 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address ipv6/Ipv6 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwSrcActionCase set_nw_src_action/SetNwSrcAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction address/Address 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address ipv4/Ipv4 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address ipv6/Ipv6 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwTosActionCase set_nw_tos_action/SetNwTosAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwTosActionCase_SetNwTosAction tos/int32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwTtlActionCase set_nw_ttl_action/SetNwTtlAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetNwTtlActionCase_SetNwTtlAction nw_ttl/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetQueueActionCase set_queue_action/SetQueueAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetQueueActionCase_SetQueueAction queue/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetQueueActionCase_SetQueueAction queue_id/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetTpDstActionCase set_tp_dst_action/SetTpDstAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetTpDstActionCase_SetTpDstAction port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetTpSrcActionCase set_tp_src_action/SetTpSrcAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetTpSrcActionCase_SetTpSrcAction port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetVlanCfiActionCase set_vlan_cfi_action/SetVlanCfiAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetVlanCfiActionCase_SetVlanCfiAction vlan_cfi/int32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetVlanIdActionCase set_vlan_id_action/SetVlanIdAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetVlanIdActionCase_SetVlanIdAction vlan_id/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetVlanPcpActionCase set_vlan_pcp_action/SetVlanPcpAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SetVlanPcpActionCase_SetVlanPcpAction vlan_pcp/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_StripVlanActionCase strip_vlan_action/StripVlanAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ApplyActionsCase_ApplyActions_Action_Action_SwPathActionCase sw_path_action/SwPathAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase clear_actions/ClearActions 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions action/Action[] 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action action/Action 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action order/int32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action controller_action_case/ControllerActionCase 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action copy_ttl_in_case/CopyTtlInCase 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action copy_ttl_out_case/CopyTtlOutCase 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action dec_mpls_ttl_case/DecMplsTtlCase 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action dec_nw_ttl_case/DecNwTtlCase 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action drop_action_case/DropActionCase 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action flood_action_case/FloodActionCase 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action flood_all_action_case/FloodAllActionCase 8
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action group_action_case/GroupActionCase 9
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action hw_path_action_case/HwPathActionCase 10
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action loopback_action_case/LoopbackActionCase 11
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action output_action_case/OutputActionCase 12
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action pop_mpls_action_case/PopMplsActionCase 13
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action pop_pbb_action_case/PopPbbActionCase 14
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action pop_vlan_action_case/PopVlanActionCase 15
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action push_mpls_action_case/PushMplsActionCase 16
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action push_pbb_action_case/PushPbbActionCase 17
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action push_vlan_action_case/PushVlanActionCase 18
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_dl_dst_action_case/SetDlDstActionCase 19
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_dl_src_action_case/SetDlSrcActionCase 20
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_dl_type_action_case/SetDlTypeActionCase 21
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_field_case/SetFieldCase 22
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_mpls_ttl_action_case/SetMplsTtlActionCase 23
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_next_hop_action_case/SetNextHopActionCase 24
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_nw_dst_action_case/SetNwDstActionCase 25
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_nw_src_action_case/SetNwSrcActionCase 26
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_nw_tos_action_case/SetNwTosActionCase 27
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_nw_ttl_action_case/SetNwTtlActionCase 28
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_queue_action_case/SetQueueActionCase 29
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_tp_dst_action_case/SetTpDstActionCase 30
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_tp_src_action_case/SetTpSrcActionCase 31
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_vlan_cfi_action_case/SetVlanCfiActionCase 32
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_vlan_id_action_case/SetVlanIdActionCase 33
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action set_vlan_pcp_action_case/SetVlanPcpActionCase 34
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action strip_vlan_action_case/StripVlanActionCase 35
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action sw_path_action_case/SwPathActionCase 36
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_ControllerActionCase controller_action/ControllerAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_ControllerActionCase_ControllerAction max_length/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_CopyTtlInCase copy_ttl_in/CopyTtlIn 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_CopyTtlOutCase copy_ttl_out/CopyTtlOut 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_DecMplsTtlCase dec_mpls_ttl/DecMplsTtl 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_DecNwTtlCase dec_nw_ttl/DecNwTtl 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_DropActionCase drop_action/DropAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_FloodActionCase flood_action/FloodAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_FloodAllActionCase flood_all_action/FloodAllAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_GroupActionCase group_action/GroupAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_GroupActionCase_GroupAction group/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_GroupActionCase_GroupAction group_id/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_HwPathActionCase hw_path_action/HwPathAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_LoopbackActionCase loopback_action/LoopbackAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_OutputActionCase output_action/OutputAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_OutputActionCase_OutputAction max_length/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_OutputActionCase_OutputAction output_node_connector/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PopMplsActionCase pop_mpls_action/PopMplsAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PopMplsActionCase_PopMplsAction ethernet_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PopPbbActionCase pop_pbb_action/PopPbbAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PopVlanActionCase pop_vlan_action/PopVlanAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PushMplsActionCase push_mpls_action/PushMplsAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PushMplsActionCase_PushMplsAction ethernet_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PushPbbActionCase push_pbb_action/PushPbbAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PushPbbActionCase_PushPbbAction ethernet_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PushVlanActionCase push_vlan_action/PushVlanAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PushVlanActionCase_PushVlanAction cfi/int32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PushVlanActionCase_PushVlanAction ethernet_type/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PushVlanActionCase_PushVlanAction pcp/int32 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PushVlanActionCase_PushVlanAction tag/int32 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_PushVlanActionCase_PushVlanAction vlan_id/uint32 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetDlDstActionCase set_dl_dst_action/SetDlDstAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetDlDstActionCase_SetDlDstAction address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetDlSrcActionCase set_dl_src_action/SetDlSrcAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetDlSrcActionCase_SetDlSrcAction address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetDlTypeActionCase set_dl_type_action/SetDlTypeAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetDlTypeActionCase_SetDlTypeAction dl_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase set_field/SetField 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField ethernet_match/EthernetMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField icmpv4_match/Icmpv4Match 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField icmpv6_match/Icmpv6Match 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField in_phy_port/string 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField in_port/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField ip_match/IpMatch 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField layer_3_match/Layer_3Match 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField layer_4_match/Layer_4Match 8
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField metadata/Metadata 9
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField protocol_match_fields/ProtocolMatchFields 10
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField tunnel/Tunnel 11
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField vlan_match/VlanMatch 12
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_destination/EthernetDestination 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_source/EthernetSource 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_type/EthernetType 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetDestination address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetDestination mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetSource address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetSource mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetType type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Icmpv4Match icmpv4_code/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Icmpv4Match icmpv4_type/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Icmpv6Match icmpv6_code/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Icmpv6Match icmpv6_type/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_IpMatch ip_dscp/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_IpMatch ip_ecn/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_IpMatch ip_proto/IpProto 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_IpMatch ip_protocol/uint32 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match arp_match/ArpMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match ipv4_match/Ipv4Match 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match ipv6_match/Ipv6Match 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_op/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_source_hardware_address/ArpSourceHardwareAddress 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_source_transport_address/string 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_target_hardware_address/ArpTargetHardwareAddress 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_target_transport_address/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpSourceHardwareAddress address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpSourceHardwareAddress mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpTargetHardwareAddress address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpTargetHardwareAddress mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv4Match ipv4_destination/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv4Match ipv4_source/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_destination/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_ext_header/Ipv6ExtHeader 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_label/Ipv6Label 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_sll/string 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_target/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_tll/string 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_source/string 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6ExtHeader ipv6_exthdr/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6ExtHeader ipv6_exthdr_mask/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6Label flabel_mask/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6Label ipv6_flabel/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_4Match sctp_match/SctpMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_4Match tcp_match/TcpMatch 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_4Match udp_match/UdpMatch 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_4Match_SctpMatch sctp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_4Match_SctpMatch sctp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_4Match_TcpMatch tcp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_4Match_TcpMatch tcp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_4Match_UdpMatch udp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Layer_4Match_UdpMatch udp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Metadata metadata/uint64 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Metadata metadata_mask/uint64 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_bos/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_label/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_tc/uint32 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields pbb/Pbb 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields_Pbb pbb_isid/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields_Pbb pbb_mask/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Tunnel tunnel_id/uint64 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_Tunnel tunnel_mask/uint64 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_VlanMatch vlan_id/VlanId 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_VlanMatch vlan_pcp/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_VlanMatch_VlanId vlan_id/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetFieldCase_SetField_VlanMatch_VlanId vlan_id_present/bool 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetMplsTtlActionCase set_mpls_ttl_action/SetMplsTtlAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetMplsTtlActionCase_SetMplsTtlAction mpls_ttl/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNextHopActionCase set_next_hop_action/SetNextHopAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNextHopActionCase_SetNextHopAction address/Address 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address ipv4/Ipv4 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address ipv6/Ipv6 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwDstActionCase set_nw_dst_action/SetNwDstAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwDstActionCase_SetNwDstAction address/Address 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address ipv4/Ipv4 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address ipv6/Ipv6 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwSrcActionCase set_nw_src_action/SetNwSrcAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction address/Address 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address ipv4/Ipv4 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address ipv6/Ipv6 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwTosActionCase set_nw_tos_action/SetNwTosAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwTosActionCase_SetNwTosAction tos/int32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwTtlActionCase set_nw_ttl_action/SetNwTtlAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetNwTtlActionCase_SetNwTtlAction nw_ttl/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetQueueActionCase set_queue_action/SetQueueAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetQueueActionCase_SetQueueAction queue/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetQueueActionCase_SetQueueAction queue_id/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetTpDstActionCase set_tp_dst_action/SetTpDstAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetTpDstActionCase_SetTpDstAction port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetTpSrcActionCase set_tp_src_action/SetTpSrcAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetTpSrcActionCase_SetTpSrcAction port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetVlanCfiActionCase set_vlan_cfi_action/SetVlanCfiAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetVlanCfiActionCase_SetVlanCfiAction vlan_cfi/int32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetVlanIdActionCase set_vlan_id_action/SetVlanIdAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetVlanIdActionCase_SetVlanIdAction vlan_id/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetVlanPcpActionCase set_vlan_pcp_action/SetVlanPcpAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SetVlanPcpActionCase_SetVlanPcpAction vlan_pcp/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_StripVlanActionCase strip_vlan_action/StripVlanAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_ClearActionsCase_ClearActions_Action_Action_SwPathActionCase sw_path_action/SwPathAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_GoToTableCase go_to_table/GoToTable 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_GoToTableCase_GoToTable table_id/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_MeterCase meter/Meter 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_MeterCase_Meter meter_id/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase write_actions/WriteActions 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions action/Action[] 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action action/Action 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action order/int32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action controller_action_case/ControllerActionCase 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action copy_ttl_in_case/CopyTtlInCase 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action copy_ttl_out_case/CopyTtlOutCase 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action dec_mpls_ttl_case/DecMplsTtlCase 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action dec_nw_ttl_case/DecNwTtlCase 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action drop_action_case/DropActionCase 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action flood_action_case/FloodActionCase 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action flood_all_action_case/FloodAllActionCase 8
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action group_action_case/GroupActionCase 9
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action hw_path_action_case/HwPathActionCase 10
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action loopback_action_case/LoopbackActionCase 11
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action output_action_case/OutputActionCase 12
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action pop_mpls_action_case/PopMplsActionCase 13
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action pop_pbb_action_case/PopPbbActionCase 14
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action pop_vlan_action_case/PopVlanActionCase 15
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action push_mpls_action_case/PushMplsActionCase 16
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action push_pbb_action_case/PushPbbActionCase 17
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action push_vlan_action_case/PushVlanActionCase 18
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_dl_dst_action_case/SetDlDstActionCase 19
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_dl_src_action_case/SetDlSrcActionCase 20
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_dl_type_action_case/SetDlTypeActionCase 21
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_field_case/SetFieldCase 22
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_mpls_ttl_action_case/SetMplsTtlActionCase 23
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_next_hop_action_case/SetNextHopActionCase 24
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_nw_dst_action_case/SetNwDstActionCase 25
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_nw_src_action_case/SetNwSrcActionCase 26
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_nw_tos_action_case/SetNwTosActionCase 27
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_nw_ttl_action_case/SetNwTtlActionCase 28
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_queue_action_case/SetQueueActionCase 29
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_tp_dst_action_case/SetTpDstActionCase 30
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_tp_src_action_case/SetTpSrcActionCase 31
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_vlan_cfi_action_case/SetVlanCfiActionCase 32
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_vlan_id_action_case/SetVlanIdActionCase 33
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action set_vlan_pcp_action_case/SetVlanPcpActionCase 34
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action strip_vlan_action_case/StripVlanActionCase 35
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action sw_path_action_case/SwPathActionCase 36
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_ControllerActionCase controller_action/ControllerAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_ControllerActionCase_ControllerAction max_length/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_CopyTtlInCase copy_ttl_in/CopyTtlIn 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_CopyTtlOutCase copy_ttl_out/CopyTtlOut 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_DecMplsTtlCase dec_mpls_ttl/DecMplsTtl 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_DecNwTtlCase dec_nw_ttl/DecNwTtl 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_DropActionCase drop_action/DropAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_FloodActionCase flood_action/FloodAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_FloodAllActionCase flood_all_action/FloodAllAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_GroupActionCase group_action/GroupAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_GroupActionCase_GroupAction group/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_GroupActionCase_GroupAction group_id/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_HwPathActionCase hw_path_action/HwPathAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_LoopbackActionCase loopback_action/LoopbackAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_OutputActionCase output_action/OutputAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_OutputActionCase_OutputAction max_length/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_OutputActionCase_OutputAction output_node_connector/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PopMplsActionCase pop_mpls_action/PopMplsAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PopMplsActionCase_PopMplsAction ethernet_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PopPbbActionCase pop_pbb_action/PopPbbAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PopVlanActionCase pop_vlan_action/PopVlanAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PushMplsActionCase push_mpls_action/PushMplsAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PushMplsActionCase_PushMplsAction ethernet_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PushPbbActionCase push_pbb_action/PushPbbAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PushPbbActionCase_PushPbbAction ethernet_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PushVlanActionCase push_vlan_action/PushVlanAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PushVlanActionCase_PushVlanAction cfi/int32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PushVlanActionCase_PushVlanAction ethernet_type/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PushVlanActionCase_PushVlanAction pcp/int32 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PushVlanActionCase_PushVlanAction tag/int32 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_PushVlanActionCase_PushVlanAction vlan_id/uint32 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetDlDstActionCase set_dl_dst_action/SetDlDstAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetDlDstActionCase_SetDlDstAction address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetDlSrcActionCase set_dl_src_action/SetDlSrcAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetDlSrcActionCase_SetDlSrcAction address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetDlTypeActionCase set_dl_type_action/SetDlTypeAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetDlTypeActionCase_SetDlTypeAction dl_type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase set_field/SetField 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField ethernet_match/EthernetMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField icmpv4_match/Icmpv4Match 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField icmpv6_match/Icmpv6Match 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField in_phy_port/string 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField in_port/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField ip_match/IpMatch 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField layer_3_match/Layer_3Match 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField layer_4_match/Layer_4Match 8
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField metadata/Metadata 9
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField protocol_match_fields/ProtocolMatchFields 10
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField tunnel/Tunnel 11
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField vlan_match/VlanMatch 12
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_destination/EthernetDestination 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_source/EthernetSource 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_EthernetMatch ethernet_type/EthernetType 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetDestination address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetDestination mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetSource address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetSource mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_EthernetMatch_EthernetType type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Icmpv4Match icmpv4_code/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Icmpv4Match icmpv4_type/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Icmpv6Match icmpv6_code/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Icmpv6Match icmpv6_type/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_IpMatch ip_dscp/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_IpMatch ip_ecn/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_IpMatch ip_proto/IpProto 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_IpMatch ip_protocol/uint32 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match arp_match/ArpMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match ipv4_match/Ipv4Match 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match ipv6_match/Ipv6Match 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_op/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_source_hardware_address/ArpSourceHardwareAddress 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_source_transport_address/string 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_target_hardware_address/ArpTargetHardwareAddress 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch arp_target_transport_address/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpSourceHardwareAddress address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpSourceHardwareAddress mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpTargetHardwareAddress address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_ArpMatch_ArpTargetHardwareAddress mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv4Match ipv4_destination/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv4Match ipv4_source/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_destination/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_ext_header/Ipv6ExtHeader 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_label/Ipv6Label 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_sll/string 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_target/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_nd_tll/string 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match ipv6_source/string 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6ExtHeader ipv6_exthdr/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6ExtHeader ipv6_exthdr_mask/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6Label flabel_mask/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_3Match_Ipv6Match_Ipv6Label ipv6_flabel/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_4Match sctp_match/SctpMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_4Match tcp_match/TcpMatch 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_4Match udp_match/UdpMatch 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_4Match_SctpMatch sctp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_4Match_SctpMatch sctp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_4Match_TcpMatch tcp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_4Match_TcpMatch tcp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_4Match_UdpMatch udp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Layer_4Match_UdpMatch udp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Metadata metadata/uint64 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Metadata metadata_mask/uint64 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_bos/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_label/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields mpls_tc/uint32 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields pbb/Pbb 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields_Pbb pbb_isid/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_ProtocolMatchFields_Pbb pbb_mask/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Tunnel tunnel_id/uint64 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_Tunnel tunnel_mask/uint64 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_VlanMatch vlan_id/VlanId 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_VlanMatch vlan_pcp/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_VlanMatch_VlanId vlan_id/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetFieldCase_SetField_VlanMatch_VlanId vlan_id_present/bool 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetMplsTtlActionCase set_mpls_ttl_action/SetMplsTtlAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetMplsTtlActionCase_SetMplsTtlAction mpls_ttl/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNextHopActionCase set_next_hop_action/SetNextHopAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNextHopActionCase_SetNextHopAction address/Address 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address ipv4/Ipv4 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address ipv6/Ipv6 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNextHopActionCase_SetNextHopAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwDstActionCase set_nw_dst_action/SetNwDstAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwDstActionCase_SetNwDstAction address/Address 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address ipv4/Ipv4 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address ipv6/Ipv6 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwDstActionCase_SetNwDstAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwSrcActionCase set_nw_src_action/SetNwSrcAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction address/Address 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address ipv4/Ipv4 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address ipv6/Ipv6 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address_Ipv4 ipv4_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwSrcActionCase_SetNwSrcAction_Address_Ipv6 ipv6_address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwTosActionCase set_nw_tos_action/SetNwTosAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwTosActionCase_SetNwTosAction tos/int32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwTtlActionCase set_nw_ttl_action/SetNwTtlAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetNwTtlActionCase_SetNwTtlAction nw_ttl/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetQueueActionCase set_queue_action/SetQueueAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetQueueActionCase_SetQueueAction queue/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetQueueActionCase_SetQueueAction queue_id/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetTpDstActionCase set_tp_dst_action/SetTpDstAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetTpDstActionCase_SetTpDstAction port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetTpSrcActionCase set_tp_src_action/SetTpSrcAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetTpSrcActionCase_SetTpSrcAction port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetVlanCfiActionCase set_vlan_cfi_action/SetVlanCfiAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetVlanCfiActionCase_SetVlanCfiAction vlan_cfi/int32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetVlanIdActionCase set_vlan_id_action/SetVlanIdAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetVlanIdActionCase_SetVlanIdAction vlan_id/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetVlanPcpActionCase set_vlan_pcp_action/SetVlanPcpAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SetVlanPcpActionCase_SetVlanPcpAction vlan_pcp/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_StripVlanActionCase strip_vlan_action/StripVlanAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteActionsCase_WriteActions_Action_Action_SwPathActionCase sw_path_action/SwPathAction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteMetadataCase write_metadata/WriteMetadata 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteMetadataCase_WriteMetadata metadata/uint64 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instruction_Instruction_WriteMetadataCase_WriteMetadata metadata_mask/uint64 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instructions instruction/Instruction[] 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instructions_Instruction instruction/Instruction 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Instructions_Instruction order/int32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match ethernet_match/EthernetMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match icmpv4_match/Icmpv4Match 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match icmpv6_match/Icmpv6Match 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match in_phy_port/string 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match in_port/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match ip_match/IpMatch 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match layer_3_match/Layer_3Match 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match layer_4_match/Layer_4Match 8
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match metadata/Metadata 9
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match protocol_match_fields/ProtocolMatchFields 10
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match tunnel/Tunnel 11
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match vlan_match/VlanMatch 12
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_EthernetMatch ethernet_destination/EthernetDestination 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_EthernetMatch ethernet_source/EthernetSource 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_EthernetMatch ethernet_type/EthernetType 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_EthernetMatch_EthernetDestination address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_EthernetMatch_EthernetDestination mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_EthernetMatch_EthernetSource address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_EthernetMatch_EthernetSource mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_EthernetMatch_EthernetType type/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Icmpv4Match icmpv4_code/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Icmpv4Match icmpv4_type/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Icmpv6Match icmpv6_code/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Icmpv6Match icmpv6_type/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_IpMatch ip_dscp/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_IpMatch ip_ecn/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_IpMatch ip_proto/IpProto 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_IpMatch ip_protocol/uint32 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match arp_match/ArpMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match ipv4_match/Ipv4Match 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match ipv6_match/Ipv6Match 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_ArpMatch arp_op/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_ArpMatch arp_source_hardware_address/ArpSourceHardwareAddress 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_ArpMatch arp_source_transport_address/string 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_ArpMatch arp_target_hardware_address/ArpTargetHardwareAddress 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_ArpMatch arp_target_transport_address/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_ArpMatch_ArpSourceHardwareAddress address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_ArpMatch_ArpSourceHardwareAddress mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_ArpMatch_ArpTargetHardwareAddress address/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_ArpMatch_ArpTargetHardwareAddress mask/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv4Match ipv4_destination/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv4Match ipv4_source/string 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv6Match ipv6_destination/string 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv6Match ipv6_ext_header/Ipv6ExtHeader 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv6Match ipv6_label/Ipv6Label 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv6Match ipv6_nd_sll/string 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv6Match ipv6_nd_target/string 5
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv6Match ipv6_nd_tll/string 6
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv6Match ipv6_source/string 7
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv6Match_Ipv6ExtHeader ipv6_exthdr/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv6Match_Ipv6ExtHeader ipv6_exthdr_mask/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv6Match_Ipv6Label flabel_mask/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_3Match_Ipv6Match_Ipv6Label ipv6_flabel/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_4Match sctp_match/SctpMatch 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_4Match tcp_match/TcpMatch 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_4Match udp_match/UdpMatch 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_4Match_SctpMatch sctp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_4Match_SctpMatch sctp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_4Match_TcpMatch tcp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_4Match_TcpMatch tcp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_4Match_UdpMatch udp_destination_port/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Layer_4Match_UdpMatch udp_source_port/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Metadata metadata/uint64 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Metadata metadata_mask/uint64 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_ProtocolMatchFields mpls_bos/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_ProtocolMatchFields mpls_label/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_ProtocolMatchFields mpls_tc/uint32 3
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_ProtocolMatchFields pbb/Pbb 4
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_ProtocolMatchFields_Pbb pbb_isid/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_ProtocolMatchFields_Pbb pbb_mask/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Tunnel tunnel_id/uint64 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_Tunnel tunnel_mask/uint64 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_VlanMatch vlan_id/VlanId 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_VlanMatch vlan_pcp/uint32 2
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_VlanMatch_VlanId vlan_id/uint32 1
// goyang-tag FlowsStatisticsUpdate_FlowAndStatisticsMapList_Match_VlanMatch_VlanId vlan_id_present/bool 2
// goyang-tag FlowsStatisticsUpdate_NodeConnector id/string 1
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForAllFlows_GetAggregateFlowStatisticsFromFlowTableForAllFlowsRequest node/string 1
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForAllFlows_GetAggregateFlowStatisticsFromFlowTableForAllFlowsRequest table_id/uint32 2
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForAllFlows_GetAggregateFlowStatisticsFromFlowTableForAllFlowsResponse byte_count/uint64 1
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForAllFlows_GetAggregateFlowStatisticsFromFlowTableForAllFlowsResponse flow_count/uint32 2
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForAllFlows_GetAggregateFlowStatisticsFromFlowTableForAllFlowsResponse packet_count/uint64 3
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForAllFlows_GetAggregateFlowStatisticsFromFlowTableForAllFlowsResponse transaction_id/uint64 4
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest barrier/bool 1
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest buffer_id/uint32 2
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest container_name/string 3
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest cookie/uint64 4
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest cookie_mask/uint64 5
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest flags/Flags 6
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest flow_name/string 7
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest hard_timeout/uint32 8
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest idle_timeout/uint32 9
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest installHw/bool 10
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest instructions/Instructions 11
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest match/Match 12
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest node/string 13
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest out_group/uint32 14
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest out_port/uint64 15
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest priority/uint32 16
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest strict/bool 17
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchRequest table_id/uint32 18
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchResponse byte_count/uint64 1
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchResponse flow_count/uint32 2
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchResponse packet_count/uint64 3
// goyang-tag GetAggregateFlowStatisticsFromFlowTableForGivenMatch_GetAggregateFlowStatisticsFromFlowTableForGivenMatchResponse transaction_id/uint64 4
// goyang-tag GetAllFlowStatisticsFromFlowTable_GetAllFlowStatisticsFromFlowTableRequest node/string 1
// goyang-tag GetAllFlowStatisticsFromFlowTable_GetAllFlowStatisticsFromFlowTableRequest table_id/uint32 2
// goyang-tag GetAllFlowStatisticsFromFlowTable_GetAllFlowStatisticsFromFlowTableResponse flow_and_statistics_map_list/FlowAndStatisticsMapList[] 1
// goyang-tag GetAllFlowStatisticsFromFlowTable_GetAllFlowStatisticsFromFlowTableResponse transaction_id/uint64 2
// goyang-tag GetAllFlowsStatisticsFromAllFlowTables_GetAllFlowsStatisticsFromAllFlowTablesRequest node/string 1
// goyang-tag GetAllFlowsStatisticsFromAllFlowTables_GetAllFlowsStatisticsFromAllFlowTablesResponse flow_and_statistics_map_list/FlowAndStatisticsMapList[] 1
// goyang-tag GetAllFlowsStatisticsFromAllFlowTables_GetAllFlowsStatisticsFromAllFlowTablesResponse transaction_id/uint64 2
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest barrier/bool 1
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest buffer_id/uint32 2
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest container_name/string 3
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest cookie/uint64 4
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest cookie_mask/uint64 5
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest flags/Flags 6
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest flow_name/string 7
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest hard_timeout/uint32 8
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest idle_timeout/uint32 9
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest installHw/bool 10
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest instructions/Instructions 11
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest match/Match 12
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest node/string 13
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest out_group/uint32 14
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest out_port/uint64 15
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest priority/uint32 16
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest strict/bool 17
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableRequest table_id/uint32 18
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableResponse flow_and_statistics_map_list/FlowAndStatisticsMapList[] 1
// goyang-tag GetFlowStatisticsFromFlowTable_GetFlowStatisticsFromFlowTableResponse transaction_id/uint64 2
